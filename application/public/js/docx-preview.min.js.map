{"version":3,"file":"docx-preview.min.js","mappings":"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","sources":["webpack://docx/webpack/universalModuleDefinition","webpack://docx/./src/common/open-xml-package.ts","webpack://docx/./src/common/part.ts","webpack://docx/./src/common/relationship.ts","webpack://docx/./src/document-parser.ts","webpack://docx/./src/document-props/core-props-part.ts","webpack://docx/./src/document-props/core-props.ts","webpack://docx/./src/document-props/custom-props-part.ts","webpack://docx/./src/document-props/custom-props.ts","webpack://docx/./src/document-props/extended-props-part.ts","webpack://docx/./src/document-props/extended-props.ts","webpack://docx/./src/document/bookmarks.ts","webpack://docx/./src/document/border.ts","webpack://docx/./src/document/common.ts","webpack://docx/./src/document/document-part.ts","webpack://docx/./src/document/dom.ts","webpack://docx/./src/document/line-spacing.ts","webpack://docx/./src/document/paragraph.ts","webpack://docx/./src/document/run.ts","webpack://docx/./src/document/section.ts","webpack://docx/./src/docx-preview.ts","webpack://docx/./src/font-table/font-table.ts","webpack://docx/./src/font-table/fonts.ts","webpack://docx/./src/header-footer/elements.ts","webpack://docx/./src/header-footer/parts.ts","webpack://docx/./src/html-renderer.ts","webpack://docx/./src/javascript.ts","webpack://docx/./src/notes/elements.ts","webpack://docx/./src/notes/parts.ts","webpack://docx/./src/numbering/numbering-part.ts","webpack://docx/./src/numbering/numbering.ts","webpack://docx/./src/parser/xml-parser.ts","webpack://docx/./src/settings/settings-part.ts","webpack://docx/./src/settings/settings.ts","webpack://docx/./src/styles/styles-part.ts","webpack://docx/./src/theme/theme-part.ts","webpack://docx/./src/theme/theme.ts","webpack://docx/./src/utils.ts","webpack://docx/./src/word-document.ts","webpack://docx/external umd {\"root\":\"JSZip\",\"commonjs\":\"jszip\",\"commonjs2\":\"jszip\",\"amd\":\"jszip\"}","webpack://docx/webpack/bootstrap","webpack://docx/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jszip\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jszip\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"docx\"] = factory(require(\"jszip\"));\n\telse\n\t\troot[\"docx\"] = factory(root[\"JSZip\"]);\n})(self, function(__WEBPACK_EXTERNAL_MODULE__626__) {\nreturn ","import * as JSZip from \"jszip\";\r\nimport { parseXmlString, XmlParser } from \"../parser/xml-parser\";\r\nimport { splitPath } from \"../utils\";\r\nimport { parseRelationships, Relationship } from \"./relationship\";\r\n\r\nexport interface OpenXmlPackageOptions {\r\n    trimXmlDeclaration: boolean,\r\n    keepOrigin: boolean,\r\n}\r\n\r\nexport class OpenXmlPackage {\r\n    xmlParser: XmlParser = new XmlParser();\r\n\r\n    constructor(private _zip: JSZip, public options: OpenXmlPackageOptions) {\r\n    }\r\n\r\n    get(path: string): any {\r\n        return this._zip.files[normalizePath(path)];\r\n    }\r\n\r\n    update(path: string, content: any) {\r\n        this._zip.file(path, content);\r\n    }\r\n\r\n    static load(input: Blob | any, options: OpenXmlPackageOptions): Promise<OpenXmlPackage> {\r\n        return JSZip.loadAsync(input).then(zip => new OpenXmlPackage(zip, options));\r\n    }\r\n\r\n    save(type: any = \"blob\"): Promise<any>  {\r\n        return this._zip.generateAsync({ type });\r\n    }\r\n\r\n    load(path: string, type: JSZip.OutputType = \"string\"): Promise<any> {\r\n        return this.get(path)?.async(type) ?? Promise.resolve(null);\r\n    }\r\n\r\n    loadRelationships(path: string = null): Promise<Relationship[]> {\r\n        let relsPath = `_rels/.rels`;\r\n\r\n        if (path != null) {\r\n            const [f, fn] = splitPath(path);\r\n            relsPath = `${f}_rels/${fn}.rels`;\r\n        }\r\n\r\n        return this.load(relsPath)\r\n            .then(txt => txt ? parseRelationships(this.parseXmlDocument(txt).firstElementChild, this.xmlParser) : null);\r\n    }\r\n\r\n    /** @internal */\r\n    parseXmlDocument(txt: string): Document {\r\n        return parseXmlString(txt, this.options.trimXmlDeclaration);\r\n    }\r\n}\r\n\r\nfunction normalizePath(path: string) {\r\n    return path.startsWith('/') ? path.substr(1) : path;\r\n}","import { serializeXmlString } from \"../parser/xml-parser\";\r\nimport { OpenXmlPackage } from \"./open-xml-package\";\r\nimport { Relationship } from \"./relationship\";\r\n\r\nexport class Part {\r\n    protected _xmlDocument: Document;\r\n\r\n    rels: Relationship[];\r\n\r\n    constructor(protected _package: OpenXmlPackage, public path: string) {\r\n    }\r\n\r\n    load(): Promise<any> {\r\n        return Promise.all([\r\n            this._package.loadRelationships(this.path).then(rels => {\r\n                this.rels = rels;\r\n            }),\r\n            this._package.load(this.path).then(text => {\r\n                const xmlDoc = this._package.parseXmlDocument(text);\r\n\r\n                if (this._package.options.keepOrigin) {\r\n                    this._xmlDocument = xmlDoc;\r\n                }\r\n\r\n                this.parseXml(xmlDoc.firstElementChild);\r\n            })\r\n        ]);\r\n    }\r\n\r\n    save() {\r\n        this._package.update(this.path, serializeXmlString(this._xmlDocument));\r\n    }\r\n\r\n    protected parseXml(root: Element) {\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface Relationship {\r\n    id: string,\r\n    type: RelationshipTypes | string,\r\n    target: string\r\n    targetMode: \"\" | string \r\n}\r\n\r\nexport enum RelationshipTypes {\r\n    OfficeDocument = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\",\r\n    FontTable = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/fontTable\",\r\n    Image = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\",\r\n    Numbering = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/numbering\",\r\n    Styles = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\",\r\n    StylesWithEffects = \"http://schemas.microsoft.com/office/2007/relationships/stylesWithEffects\",\r\n    Theme = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme\",\r\n    Settings = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/settings\",\r\n    WebSettings = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/webSettings\",\r\n    Hyperlink = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\",\r\n    Footnotes = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/footnotes\",\r\n\tEndnotes = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/endnotes\",\r\n    Footer = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/footer\",\r\n    Header = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/header\",\r\n    ExtendedProperties = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties\",\r\n    CoreProperties = \"http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties\",\r\n\tCustomProperties = \"http://schemas.openxmlformats.org/package/2006/relationships/metadata/custom-properties\",\r\n}\r\n\r\nexport function parseRelationships(root: Element, xml: XmlParser): Relationship[] {\r\n    return xml.elements(root).map(e => <Relationship>{\r\n        id: xml.attr(e, \"Id\"),\r\n        type: xml.attr(e, \"Type\"),\r\n        target: xml.attr(e, \"Target\"),\r\n        targetMode: xml.attr(e, \"TargetMode\")\r\n    });\r\n}","import {\r\n    DomType, WmlTable, IDomNumbering,\r\n    WmlHyperlink, IDomImage, OpenXmlElement, WmlTableColumn, WmlTableCell,\r\n    WmlTableRow, NumberingPicBullet, WmlText, WmlSymbol, WmlBreak, WmlNoteReference\r\n} from './document/dom';\r\nimport { DocumentElement } from './document/document';\r\nimport { WmlParagraph, parseParagraphProperties, parseParagraphProperty } from './document/paragraph';\r\nimport { parseSectionProperties } from './document/section';\r\nimport xml from './parser/xml-parser';\r\nimport { parseRunProperties, WmlRun } from './document/run';\r\nimport { parseBookmarkEnd, parseBookmarkStart } from './document/bookmarks';\r\nimport { IDomStyle, IDomSubStyle } from './document/style';\r\nimport { WmlFieldChar, WmlFieldSimple, WmlInstructionText } from './document/fields';\r\nimport { convertLength, LengthUsage, LengthUsageType } from './document/common';\r\n\r\nexport var autos = {\r\n    shd: \"white\",\r\n    color: \"black\",\r\n\tborderColor: \"black\",\r\n    highlight: \"transparent\"\r\n};\r\n\r\nexport interface DocumentParserOptions {\r\n    ignoreWidth: boolean;\r\n    debug: boolean;\r\n}\r\n\r\nexport class DocumentParser {\r\n    options: DocumentParserOptions;\r\n\r\n    constructor(options?: Partial<DocumentParserOptions>) {\r\n        this.options = {\r\n            ignoreWidth: false,\r\n            debug: false,\r\n            ...options   \r\n        };\r\n    }\r\n\r\n    parseNotes(xmlDoc: Element, elemName: string, elemClass: any): any[] {\r\n        var result = [];\r\n\r\n        for (let el of xml.elements(xmlDoc, elemName)) {\r\n            const node = new elemClass();\r\n            node.id = xml.attr(el, \"id\");\r\n            node.noteType = xml.attr(el, \"type\");\r\n            node.children = this.parseBodyElements(el);\r\n            result.push(node);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parseDocumentFile(xmlDoc: Element): DocumentElement {\r\n        var xbody = xml.element(xmlDoc, \"body\");\r\n        var background = xml.element(xmlDoc, \"background\");\r\n        var sectPr = xml.element(xbody, \"sectPr\");\r\n\r\n        return {\r\n            type: DomType.Document,\r\n            children: this.parseBodyElements(xbody),\r\n            props: sectPr ? parseSectionProperties(sectPr, xml) : null,\r\n            cssStyle: background ? this.parseBackground(background) : {},\r\n        };\r\n    }\r\n\r\n    parseBackground(elem: Element): any {\r\n        var result = {};\r\n        var color = xmlUtil.colorAttr(elem, \"color\");\r\n\r\n        if (color) {\r\n            result[\"background-color\"] = color;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parseBodyElements(element: Element): OpenXmlElement[] {\r\n        var children = [];\r\n        \r\n        xmlUtil.foreach(element, elem => {\r\n            switch (elem.localName) {\r\n                case \"p\":\r\n                    children.push(this.parseParagraph(elem));\r\n                    break;\r\n\r\n                case \"tbl\":\r\n                    children.push(this.parseTable(elem));\r\n                    break;\r\n\r\n\t\t\t\tcase \"sdt\":\r\n\t\t\t\t\tthis.parseSdt(elem).forEach(el => children.push(el));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n        });\r\n\r\n        return children;\r\n    }\r\n\r\n    parseStylesFile(xstyles: Element): IDomStyle[] {\r\n        var result = [];\r\n\r\n        xmlUtil.foreach(xstyles, n => {\r\n            switch (n.localName) {\r\n                case \"style\":\r\n                    result.push(this.parseStyle(n));\r\n                    break;\r\n\r\n                case \"docDefaults\":\r\n                    result.push(this.parseDefaultStyles(n));\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseDefaultStyles(node: Element): IDomStyle {\r\n        var result = <IDomStyle>{\r\n            id: null,\r\n            name: null,\r\n            target: null,\r\n            basedOn: null,\r\n            styles: []\r\n        };\r\n\r\n        xmlUtil.foreach(node, c => {\r\n            switch (c.localName) {\r\n                case \"rPrDefault\":\r\n                    var rPr = xml.element(c, \"rPr\");\r\n\r\n                    if (rPr)\r\n                        result.styles.push({\r\n                            target: \"span\",\r\n                            values: this.parseDefaultProperties(rPr, {})\r\n                        });\r\n                    break;\r\n\r\n                case \"pPrDefault\":\r\n                    var pPr = xml.element(c, \"pPr\");\r\n\r\n                    if (pPr)\r\n                        result.styles.push({\r\n                            target: \"p\",\r\n                            values: this.parseDefaultProperties(pPr, {})\r\n                        });\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseStyle(node: Element): IDomStyle {\r\n        var result = <IDomStyle>{\r\n            id: xml.attr(node, \"styleId\"),\r\n            isDefault: xml.boolAttr(node, \"default\"),\r\n            name: null,\r\n            target: null,\r\n            basedOn: null,\r\n            styles: [],\r\n            linked: null\r\n        };\r\n\r\n        switch (xml.attr(node, \"type\")) {\r\n            case \"paragraph\": result.target = \"p\"; break;\r\n            case \"table\": result.target = \"table\"; break;\r\n            case \"character\": result.target = \"span\"; break;\r\n            //case \"numbering\": result.target = \"p\"; break;\r\n        }\r\n\r\n        xmlUtil.foreach(node, n => {\r\n            switch (n.localName) {\r\n                case \"basedOn\":\r\n                    result.basedOn = xml.attr(n, \"val\");\r\n                    break;\r\n\r\n                case \"name\":\r\n                    result.name = xml.attr(n, \"val\");\r\n                    break;\r\n\r\n                case \"link\":\r\n                    result.linked = xml.attr(n, \"val\");\r\n                    break;\r\n                \r\n                case \"next\":\r\n                    result.next = xml.attr(n, \"val\");\r\n                    break;\r\n    \r\n                case \"aliases\":\r\n                    result.aliases = xml.attr(n, \"val\").split(\",\");\r\n                    break;\r\n\r\n                case \"pPr\":\r\n                    result.styles.push({\r\n                        target: \"p\",\r\n                        values: this.parseDefaultProperties(n, {})\r\n                    });\r\n                    result.paragraphProps = parseParagraphProperties(n, xml);\r\n                    break;\r\n\r\n                case \"rPr\":\r\n                    result.styles.push({\r\n                        target: \"span\",\r\n                        values: this.parseDefaultProperties(n, {})\r\n                    });\r\n                    result.runProps = parseRunProperties(n, xml);\r\n                    break;\r\n\r\n                case \"tblPr\":\r\n                case \"tcPr\":\r\n                    result.styles.push({\r\n                        target: \"td\", //TODO: maybe move to processor\r\n                        values: this.parseDefaultProperties(n, {})\r\n                    });\r\n                    break;\r\n\r\n                case \"tblStylePr\":\r\n                    for (let s of this.parseTableStyle(n))\r\n                        result.styles.push(s);\r\n                    break;\r\n\r\n                case \"rsid\":\r\n                case \"qFormat\":\r\n                case \"hidden\":\r\n                case \"semiHidden\":\r\n                case \"unhideWhenUsed\":\r\n                case \"autoRedefine\":\r\n                case \"uiPriority\":\r\n                    //TODO: ignore\r\n                    break;\r\n\r\n                default:\r\n                    this.options.debug && console.warn(`DOCX: Unknown style element: ${n.localName}`);\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseTableStyle(node: Element): IDomSubStyle[] {\r\n        var result = [];\r\n\r\n        var type = xml.attr(node, \"type\");\r\n        var selector = \"\";\r\n        var modificator = \"\";\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase \"firstRow\":\r\n\t\t\t\tmodificator = \".first-row\";\r\n\t\t\t\tselector = \"tr.first-row td\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"lastRow\":\r\n\t\t\t\tmodificator = \".last-row\";\r\n\t\t\t\tselector = \"tr.last-row td\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"firstCol\":\r\n\t\t\t\tmodificator = \".first-col\";\r\n\t\t\t\tselector = \"td.first-col\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"lastCol\":\r\n\t\t\t\tmodificator = \".last-col\";\r\n\t\t\t\tselector = \"td.last-col\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"band1Vert\":\r\n\t\t\t\tmodificator = \":not(.no-vband)\";\r\n\t\t\t\tselector = \"td.odd-col\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"band2Vert\":\r\n\t\t\t\tmodificator = \":not(.no-vband)\";\r\n\t\t\t\tselector = \"td.even-col\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"band1Horz\":\r\n\t\t\t\tmodificator = \":not(.no-hband)\";\r\n\t\t\t\tselector = \"tr.odd-row\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"band2Horz\":\r\n\t\t\t\tmodificator = \":not(.no-hband)\";\r\n\t\t\t\tselector = \"tr.even-row\";\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: return [];\r\n\t\t}\r\n\r\n        xmlUtil.foreach(node, n => {\r\n            switch (n.localName) {\r\n                case \"pPr\":\r\n                    result.push({\r\n                        target: `${selector} p`,\r\n\t\t\t\t\t\tmod: modificator,\r\n                        values: this.parseDefaultProperties(n, {})\r\n                    });\r\n                    break;\r\n\r\n                case \"rPr\":\r\n                    result.push({\r\n                        target: `${selector} span`,\r\n\t\t\t\t\t\tmod: modificator,\r\n                        values: this.parseDefaultProperties(n, {})\r\n                    });\r\n                    break;\r\n\r\n                case \"tblPr\":\r\n                case \"tcPr\":\r\n                    result.push({\r\n                        target: selector, //TODO: maybe move to processor\r\n\t\t\t\t\t\tmod: modificator,\r\n                        values: this.parseDefaultProperties(n, {})\r\n                    });\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseNumberingFile(xnums: Element): IDomNumbering[] {\r\n        var result = [];\r\n        var mapping = {};\r\n        var bullets = [];\r\n\r\n        xmlUtil.foreach(xnums, n => {\r\n            switch (n.localName) {\r\n                case \"abstractNum\":\r\n                    this.parseAbstractNumbering(n, bullets)\r\n                        .forEach(x => result.push(x));\r\n                    break;\r\n\r\n                case \"numPicBullet\":\r\n                    bullets.push(this.parseNumberingPicBullet(n));\r\n                    break;\r\n\r\n                case \"num\":\r\n                    var numId = xml.attr(n, \"numId\");\r\n                    var abstractNumId = xml.elementAttr(n, \"abstractNumId\", \"val\");\r\n                    mapping[abstractNumId] = numId;\r\n                    break;\r\n            }\r\n        });\r\n\r\n        result.forEach(x => x.id = mapping[x.id]);\r\n\r\n        return result;\r\n    }\r\n\r\n    parseNumberingPicBullet(elem: Element): NumberingPicBullet {\r\n        var pict = xml.element(elem, \"pict\");\r\n        var shape = pict && xml.element(pict, \"shape\");\r\n        var imagedata = shape && xml.element(shape, \"imagedata\");\r\n\r\n        return imagedata ? {\r\n            id: xml.intAttr(elem, \"numPicBulletId\"),\r\n            src: xml.attr(imagedata, \"id\"),\r\n            style: xml.attr(shape, \"style\")\r\n        } : null;\r\n    }\r\n\r\n    parseAbstractNumbering(node: Element, bullets: any[]): IDomNumbering[] {\r\n        var result = [];\r\n        var id = xml.attr(node, \"abstractNumId\");\r\n\r\n        xmlUtil.foreach(node, n => {\r\n            switch (n.localName) {\r\n                case \"lvl\":\r\n                    result.push(this.parseNumberingLevel(id, n, bullets));\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseNumberingLevel(id: string, node: Element, bullets: any[]): IDomNumbering {\r\n        var result: IDomNumbering = {\r\n            id: id,\r\n            level: xml.intAttr(node, \"ilvl\"),\r\n            pStyleName: undefined,\r\n            pStyle: {},\r\n            rStyle: {},\r\n            suff: \"tab\"\r\n        };\r\n\r\n        xmlUtil.foreach(node, n => {\r\n            switch (n.localName) {\r\n                case \"pPr\":\r\n                    this.parseDefaultProperties(n, result.pStyle);\r\n                    break;\r\n\r\n                case \"rPr\":\r\n                    this.parseDefaultProperties(n, result.rStyle);\r\n                    break;\r\n\r\n                case \"lvlPicBulletId\":\r\n                    var id = xml.intAttr(n, \"val\");\r\n                    result.bullet = bullets.find(x => x.id == id);\r\n                    break;\r\n\r\n                case \"lvlText\":\r\n                    result.levelText = xml.attr(n, \"val\");\r\n                    break;\r\n\r\n                case \"pStyle\":\r\n                    result.pStyleName = xml.attr(n, \"val\");\r\n                    break;\r\n\r\n                case \"numFmt\":\r\n                    result.format = xml.attr(n, \"val\");\r\n                    break;\r\n\r\n                case \"suff\":\r\n                    result.suff = xml.attr(n, \"val\");\r\n                    break;\r\n                }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n\tparseSdt(node: Element): OpenXmlElement[] {\r\n\t\tconst sdtContent = xml.element(node, \"sdtContent\");\r\n\t\treturn sdtContent ? this.parseBodyElements(sdtContent) : [];\r\n\t}\r\n\r\n    parseParagraph(node: Element): OpenXmlElement {\r\n        var result = <WmlParagraph>{ type: DomType.Paragraph, children: [] };\r\n\r\n        xmlUtil.foreach(node, c => {\r\n            switch (c.localName) {\r\n                case \"r\":\r\n                    result.children.push(this.parseRun(c, result));\r\n                    break;\r\n\r\n                case \"hyperlink\":\r\n                    result.children.push(this.parseHyperlink(c, result));\r\n                    break;\r\n\r\n                case \"bookmarkStart\":\r\n                    result.children.push(parseBookmarkStart(c, xml));\r\n                    break;               \r\n\r\n                    case \"bookmarkEnd\":\r\n                    result.children.push(parseBookmarkEnd(c, xml));\r\n                    break;\r\n\r\n                case \"pPr\":\r\n                    this.parseParagraphProperties(c, result);\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseParagraphProperties(elem: Element, paragraph: WmlParagraph) {\r\n        this.parseDefaultProperties(elem, paragraph.cssStyle = {}, null, c => {\r\n            if(parseParagraphProperty(c, paragraph, xml))\r\n                return true;\r\n\r\n            switch (c.localName) {\r\n                case \"pStyle\":\r\n\t\t\t\t\tparagraph.styleName = xml.attr(c, \"val\");\r\n                    break;\r\n\r\n                case \"cnfStyle\":\r\n                    paragraph.className = values.classNameOfCnfStyle(c);\r\n                    break;\r\n\r\n                case \"framePr\":\r\n                    this.parseFrame(c, paragraph);\r\n                    break;\r\n\r\n                case \"rPr\":\r\n                    //TODO ignore\r\n                    break;\r\n\r\n                default:\r\n                    return false;\r\n            }\r\n\r\n            return true;\r\n        });\r\n    }\r\n\r\n    parseFrame(node: Element, paragraph: WmlParagraph) {\r\n        var dropCap = xml.attr(node, \"dropCap\");\r\n\r\n        if (dropCap == \"drop\")\r\n            paragraph.cssStyle[\"float\"] = \"left\";\r\n    }\r\n\r\n    parseHyperlink(node: Element, parent?: OpenXmlElement): WmlHyperlink {\r\n        var result: WmlHyperlink = <WmlHyperlink>{ type: DomType.Hyperlink, parent: parent, children: [] };\r\n        var anchor = xml.attr(node, \"anchor\");\r\n\r\n        if (anchor)\r\n            result.href = \"#\" + anchor;\r\n\r\n        xmlUtil.foreach(node, c => {\r\n            switch (c.localName) {\r\n                case \"r\":\r\n                    result.children.push(this.parseRun(c, result));\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseRun(node: Element, parent?: OpenXmlElement): WmlRun {\r\n        var result: WmlRun = <WmlRun>{ type: DomType.Run, parent: parent, children: [] };\r\n\r\n        xmlUtil.foreach(node, c => {\r\n            switch (c.localName) {\r\n                case \"t\":\r\n                    result.children.push(<WmlText>{ \r\n                        type: DomType.Text, \r\n                        text: c.textContent \r\n                    });//.replace(\" \", \"\\u00A0\"); // TODO\r\n                    break;\r\n                \r\n                case \"fldSimple\":\r\n                    result.children.push(<WmlFieldSimple>{\r\n                        type: DomType.SimpleField,\r\n                        instruction: xml.attr(c, \"instr\"),\r\n                        lock: xml.boolAttr(c, \"lock\", false),\r\n                        dirty: xml.boolAttr(c, \"dirty\", false)\r\n                    });\r\n                    break;\r\n\r\n                case \"instrText\":\r\n\t\t\t\t\tresult.fieldRun = true;\r\n                    result.children.push(<WmlInstructionText>{\r\n                        type: DomType.Instruction,\r\n                        text: c.textContent\r\n                    });\r\n                    break;\r\n    \r\n                case \"fldChar\":\r\n\t\t\t\t\tresult.fieldRun = true;\r\n                    result.children.push(<WmlFieldChar>{\r\n                        type: DomType.ComplexField,\r\n                        charType: xml.attr(c, \"fldCharType\"),\r\n                        lock: xml.boolAttr(c, \"lock\", false),\r\n                        dirty: xml.boolAttr(c, \"dirty\", false)\r\n                    });\r\n                    break;\r\n\r\n                case \"noBreakHyphen\":\r\n                    result.children.push({ type: DomType.NoBreakHyphen });\r\n                    break;\r\n\r\n                case \"br\":\r\n                    result.children.push(<WmlBreak>{ \r\n                        type: DomType.Break, \r\n                        break: xml.attr(c, \"type\") || \"textWrapping\"\r\n                    });\r\n                    break;\r\n\r\n                case \"lastRenderedPageBreak\":\r\n                    result.children.push(<WmlBreak>{ \r\n                        type: DomType.Break, \r\n                        break: \"lastRenderedPageBreak\"\r\n                    });\r\n                    break;\r\n                \r\n                case \"sym\":\r\n                    result.children.push(<WmlSymbol>{ \r\n                        type: DomType.Symbol, \r\n                        font: xml.attr(c, \"font\"),\r\n                        char: xml.attr(c, \"char\")\r\n                    });\r\n                    break;\r\n\r\n                case \"tab\":\r\n                    result.children.push({ type: DomType.Tab });\r\n                    break;\r\n\r\n                case \"footnoteReference\":\r\n                    result.children.push(<WmlNoteReference>{ \r\n                        type: DomType.FootnoteReference, \r\n                        id: xml.attr(c, \"id\")\r\n                    });\r\n                    break;\r\n\r\n\t\t\t\tcase \"endnoteReference\":\r\n\t\t\t\t\tresult.children.push(<WmlNoteReference>{ \r\n\t\t\t\t\t\ttype: DomType.EndnoteReference, \r\n\t\t\t\t\t\tid: xml.attr(c, \"id\")\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n                case \"drawing\":\r\n                    let d = this.parseDrawing(c);\r\n\r\n                    if (d)\r\n                        result.children = [d];\r\n                    break;\r\n\r\n                case \"rPr\":\r\n                    this.parseRunProperties(c, result);\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseRunProperties(elem: Element, run: WmlRun) {\r\n        this.parseDefaultProperties(elem, run.cssStyle = {}, null, c => {\r\n            switch (c.localName) {\r\n                case \"rStyle\":\r\n                    run.styleName = xml.attr(c, \"val\");\r\n                    break;\r\n\r\n\t\t\t\tcase \"vertAlign\":\r\n\t\t\t\t\trun.verticalAlign = values.valueOfVertAlign(c, true);\r\n\t\t\t\t\tbreak;\r\n\r\n                default:\r\n                    return false;\r\n            }\r\n\r\n            return true;\r\n        });\r\n    }\r\n\r\n    parseDrawing(node: Element): OpenXmlElement {\r\n        for (var n of xml.elements(node)) {\r\n            switch (n.localName) {\r\n                case \"inline\":\r\n                case \"anchor\":\r\n                    return this.parseDrawingWrapper(n);\r\n            }\r\n        }\r\n    }\r\n\r\n    parseDrawingWrapper(node: Element): OpenXmlElement {\r\n        var result = <OpenXmlElement>{ type: DomType.Drawing, children: [], cssStyle: {} };\r\n        var isAnchor = node.localName == \"anchor\";\r\n\r\n        //TODO\r\n        // result.style[\"margin-left\"] = xml.sizeAttr(node, \"distL\", SizeType.Emu);\r\n        // result.style[\"margin-top\"] = xml.sizeAttr(node, \"distT\", SizeType.Emu);\r\n        // result.style[\"margin-right\"] = xml.sizeAttr(node, \"distR\", SizeType.Emu);\r\n        // result.style[\"margin-bottom\"] = xml.sizeAttr(node, \"distB\", SizeType.Emu);\r\n\r\n        let wrapType: \"wrapTopAndBottom\" | \"wrapNone\" | null = null; \r\n        let simplePos = xml.boolAttr(node, \"simplePos\");\r\n\r\n        let posX = { relative: \"page\", align: \"left\", offset: \"0\" };\r\n        let posY = { relative: \"page\", align: \"top\", offset: \"0\" };\r\n\r\n        for (var n of xml.elements(node)) {\r\n            switch (n.localName) {\r\n                case \"simplePos\":\r\n                    if (simplePos) {\r\n                        posX.offset = xml.lengthAttr(n, \"x\", LengthUsage.Emu);\r\n                        posY.offset = xml.lengthAttr(n, \"y\", LengthUsage.Emu);\r\n                    }\r\n                    break;\r\n\r\n                case \"extent\":\r\n                    result.cssStyle[\"width\"] = xml.lengthAttr(n, \"cx\", LengthUsage.Emu);\r\n                    result.cssStyle[\"height\"] = xml.lengthAttr(n, \"cy\", LengthUsage.Emu);\r\n                    break;\r\n\r\n                case \"positionH\":\r\n                case \"positionV\":\r\n                    if (!simplePos) {\r\n                        let pos = n.localName == \"positionH\" ? posX : posY;\r\n                        var alignNode = xml.element(n, \"align\");\r\n                        var offsetNode = xml.element(n, \"posOffset\");\r\n\r\n                        pos.relative = xml.attr(n, \"relativeFrom\") ?? pos.relative;\r\n\r\n                        if (alignNode)\r\n                            pos.align = alignNode.textContent;\r\n\r\n                        if (offsetNode)\r\n                            pos.offset = xmlUtil.sizeValue(offsetNode, LengthUsage.Emu);\r\n                    }\r\n                    break;\r\n\r\n                case \"wrapTopAndBottom\":\r\n                    wrapType = \"wrapTopAndBottom\";\r\n                    break;\r\n                \r\n                case \"wrapNone\":\r\n                    wrapType = \"wrapNone\";\r\n                    break;\r\n\r\n                case \"graphic\":\r\n                    var g = this.parseGraphic(n);\r\n\r\n                    if (g)\r\n                        result.children.push(g);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        if (wrapType == \"wrapTopAndBottom\") {\r\n            result.cssStyle['display'] = 'block';\r\n\r\n            if (posX.align) {\r\n                result.cssStyle['text-align'] = posX.align;\r\n                result.cssStyle['width'] = \"100%\";\r\n            }\r\n        }\r\n        else if(wrapType == \"wrapNone\") {\r\n            result.cssStyle['display'] = 'block';\r\n            result.cssStyle['position'] = 'relative';\r\n            result.cssStyle[\"width\"] = \"0px\";\r\n            result.cssStyle[\"height\"] = \"0px\";\r\n\r\n            if(posX.offset)\r\n                result.cssStyle[\"left\"] = posX.offset;\r\n            if(posY.offset)\r\n                result.cssStyle[\"top\"] = posY.offset;\r\n        }\r\n        else if (isAnchor && (posX.align == 'left' || posX.align == 'right')) {\r\n            result.cssStyle[\"float\"] = posX.align;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parseGraphic(elem: Element): OpenXmlElement {\r\n        var graphicData = xml.element(elem, \"graphicData\");\r\n\r\n        for (let n of xml.elements(graphicData)) {\r\n            switch (n.localName) {\r\n                case \"pic\":\r\n                    return this.parsePicture(n);\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parsePicture(elem: Element): IDomImage {\r\n        var result = <IDomImage>{ type: DomType.Image, src: \"\", cssStyle: {} };\r\n        var blipFill = xml.element(elem, \"blipFill\");\r\n        var blip = xml.element(blipFill, \"blip\");\r\n\r\n        result.src = xml.attr(blip, \"embed\");\r\n\r\n        var spPr = xml.element(elem, \"spPr\");\r\n        var xfrm = xml.element(spPr, \"xfrm\");\r\n\r\n        result.cssStyle[\"position\"] = \"relative\";\r\n\r\n        for (var n of xml.elements(xfrm)) {\r\n            switch (n.localName) {\r\n                case \"ext\":\r\n                    result.cssStyle[\"width\"] = xml.lengthAttr(n, \"cx\", LengthUsage.Emu);\r\n                    result.cssStyle[\"height\"] = xml.lengthAttr(n, \"cy\", LengthUsage.Emu);\r\n                    break;\r\n\r\n                case \"off\":\r\n                    result.cssStyle[\"left\"] = xml.lengthAttr(n, \"x\", LengthUsage.Emu);\r\n                    result.cssStyle[\"top\"] = xml.lengthAttr(n, \"y\", LengthUsage.Emu);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parseTable(node: Element): WmlTable {\r\n        var result: WmlTable = { type: DomType.Table, children: [] };\r\n\r\n        xmlUtil.foreach(node, c => {\r\n            switch (c.localName) {\r\n                case \"tr\":\r\n                    result.children.push(this.parseTableRow(c));\r\n                    break;\r\n\r\n                case \"tblGrid\":\r\n                    result.columns = this.parseTableColumns(c);\r\n                    break;\r\n\r\n                case \"tblPr\":\r\n                    this.parseTableProperties(c, result);\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseTableColumns(node: Element): WmlTableColumn[] {\r\n        var result = [];\r\n\r\n        xmlUtil.foreach(node, n => {\r\n            switch (n.localName) {\r\n                case \"gridCol\":\r\n                    result.push({ width: xml.lengthAttr(n, \"w\") });\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseTableProperties(elem: Element, table: WmlTable) {\r\n        table.cssStyle = {};\r\n        table.cellStyle = {};\r\n\r\n        this.parseDefaultProperties(elem, table.cssStyle, table.cellStyle, c => {\r\n            switch (c.localName) {\r\n                case \"tblStyle\":\r\n                    table.styleName = xml.attr(c, \"val\");\r\n                    break;\r\n\r\n                case \"tblLook\":\r\n\t\t\t\t\ttable.className = values.classNameOftblLook(c);\r\n                    break;\r\n\r\n                case \"tblpPr\":\r\n                    this.parseTablePosition(c, table);\r\n                    break;\r\n\r\n\t\t\t\tcase \"tblStyleColBandSize\":\r\n\t\t\t\t\ttable.colBandSize = xml.intAttr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tblStyleRowBandSize\":\r\n\t\t\t\t\ttable.rowBandSize = xml.intAttr(c, \"val\");\r\n\t\t\t\t\tbreak;\r\n\t\r\n                default:\r\n                    return false;\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        switch (table.cssStyle[\"text-align\"]) {\r\n            case \"center\":\r\n                delete table.cssStyle[\"text-align\"];\r\n                table.cssStyle[\"margin-left\"] = \"auto\";\r\n                table.cssStyle[\"margin-right\"] = \"auto\";\r\n                break;\r\n\r\n            case \"right\":\r\n                delete table.cssStyle[\"text-align\"];\r\n                table.cssStyle[\"margin-left\"] = \"auto\";\r\n                break;\r\n        }\r\n    }\r\n\r\n    parseTablePosition(node: Element, table: WmlTable) {\r\n        var topFromText = xml.lengthAttr(node, \"topFromText\");\r\n        var bottomFromText = xml.lengthAttr(node, \"bottomFromText\");\r\n        var rightFromText = xml.lengthAttr(node, \"rightFromText\");\r\n        var leftFromText = xml.lengthAttr(node, \"leftFromText\");\r\n\r\n        table.cssStyle[\"float\"] = 'left';\r\n        table.cssStyle[\"margin-bottom\"] = values.addSize(table.cssStyle[\"margin-bottom\"], bottomFromText);\r\n        table.cssStyle[\"margin-left\"] = values.addSize(table.cssStyle[\"margin-left\"], leftFromText);\r\n        table.cssStyle[\"margin-right\"] = values.addSize(table.cssStyle[\"margin-right\"], rightFromText);\r\n        table.cssStyle[\"margin-top\"] = values.addSize(table.cssStyle[\"margin-top\"], topFromText);\r\n    }\r\n\r\n    parseTableRow(node: Element): WmlTableRow {\r\n        var result: WmlTableRow = { type: DomType.Row, children: [] };\r\n\r\n        xmlUtil.foreach(node, c => {\r\n            switch (c.localName) {\r\n                case \"tc\":\r\n                    result.children.push(this.parseTableCell(c));\r\n                    break;\r\n\r\n                case \"trPr\":\r\n                    this.parseTableRowProperties(c, result);\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseTableRowProperties(elem: Element, row: WmlTableRow) {\r\n        row.cssStyle = this.parseDefaultProperties(elem, {}, null, c => {\r\n            switch (c.localName) {\r\n                case \"cnfStyle\":\r\n                    row.className = values.classNameOfCnfStyle(c);\r\n                    break;\r\n\r\n                default:\r\n                    return false;\r\n            }\r\n\r\n            return true;\r\n        });\r\n    }\r\n\r\n    parseTableCell(node: Element): OpenXmlElement {\r\n        var result: WmlTableCell = { type: DomType.Cell, children: [] };\r\n\r\n        xmlUtil.foreach(node, c => {\r\n            switch (c.localName) {\r\n                case \"tbl\":\r\n                    result.children.push(this.parseTable(c));\r\n                    break;\r\n\r\n                case \"p\":\r\n                    result.children.push(this.parseParagraph(c));\r\n                    break;\r\n\r\n                case \"tcPr\":\r\n                    this.parseTableCellProperties(c, result);\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseTableCellProperties(elem: Element, cell: WmlTableCell) {\r\n        cell.cssStyle = this.parseDefaultProperties(elem, {}, null, c => {\r\n            switch (c.localName) {\r\n                case \"gridSpan\":\r\n                    cell.span = xml.intAttr(c, \"val\", null);\r\n                    break;\r\n\r\n                case \"vMerge\":\r\n\t\t\t\t\tcell.verticalMerge = xml.attr(c, \"val\") ?? \"continue\";\r\n                    break;\r\n\r\n                case \"cnfStyle\":\r\n                    cell.className = values.classNameOfCnfStyle(c);\r\n                    break;\r\n\r\n                default:\r\n                    return false;\r\n            }\r\n\r\n            return true;\r\n        });\r\n    }\r\n\r\n    parseDefaultProperties(elem: Element, style: Record<string, string> = null, childStyle: Record<string, string> = null, handler: (prop: Element) => boolean = null): Record<string, string> {\r\n        style = style || {};\r\n\r\n        xmlUtil.foreach(elem, c => {\r\n\t\t\tif (handler?.(c))\r\n\t\t\t\treturn;\r\n\r\n            switch (c.localName) {\r\n                case \"jc\":\r\n                    style[\"text-align\"] = values.valueOfJc(c);\r\n                    break;\r\n\r\n                case \"textAlignment\":\r\n                    style[\"vertical-align\"] = values.valueOfTextAlignment(c);\r\n                    break;\r\n\r\n                case \"color\":\r\n                    style[\"color\"] = xmlUtil.colorAttr(c, \"val\", null, autos.color);\r\n                    break;\r\n\r\n                case \"sz\":\r\n                    style[\"font-size\"] = style[\"min-height\"] = xml.lengthAttr(c, \"val\", LengthUsage.FontSize);\r\n                    break;\r\n\r\n                case \"shd\":\r\n                    style[\"background-color\"] = xmlUtil.colorAttr(c, \"fill\", null, autos.shd);\r\n                    break;\r\n\r\n                case \"highlight\":\r\n                    style[\"background-color\"] = xmlUtil.colorAttr(c, \"val\", null, autos.highlight);\r\n                    break;\r\n\r\n                case \"vertAlign\":\r\n\t\t\t\t\t//TODO\r\n                    // style.verticalAlign = values.valueOfVertAlign(c);\r\n                    break;\r\n\r\n\t\t\t\tcase \"position\":\r\n\t\t\t\t\tstyle.verticalAlign = xml.lengthAttr(c, \"val\", LengthUsage.FontSize);\r\n\t\t\t\t\tbreak;\r\n\t\r\n                case \"tcW\":\r\n                    if (this.options.ignoreWidth)\r\n                        break;\r\n\r\n                case \"tblW\":\r\n                    style[\"width\"] = values.valueOfSize(c, \"w\");\r\n                    break;\r\n\r\n                case \"trHeight\":\r\n                    this.parseTrHeight(c, style);\r\n                    break;\r\n\r\n                case \"strike\":\r\n                    style[\"text-decoration\"] = xml.boolAttr(c, \"val\", true) ? \"line-through\" : \"none\"\r\n                    break;\r\n\r\n                case \"b\":\r\n                    style[\"font-weight\"] = xml.boolAttr(c, \"val\", true) ? \"bold\" : \"normal\";\r\n                    break;\r\n\r\n                case \"i\":\r\n                    style[\"font-style\"] = xml.boolAttr(c, \"val\", true) ? \"italic\" : \"normal\";\r\n                    break;\r\n                \r\n                case \"caps\":\r\n                    style[\"text-transform\"] = xml.boolAttr(c, \"val\", true) ? \"uppercase\" : \"none\";\r\n                    break;\r\n\r\n                case \"smallCaps\":\r\n                    style[\"text-transform\"] = xml.boolAttr(c, \"val\", true) ? \"lowercase\" : \"none\";\r\n                    break;\r\n    \r\n                case \"u\":\r\n                    this.parseUnderline(c, style);\r\n                    break;\r\n\r\n                case \"ind\":\r\n                case \"tblInd\":\r\n                    this.parseIndentation(c, style);\r\n                    break;\r\n\r\n                case \"rFonts\":\r\n                    this.parseFont(c, style);\r\n                    break;\r\n\r\n                case \"tblBorders\":\r\n                    this.parseBorderProperties(c, childStyle || style);\r\n                    break;\r\n\r\n                case \"tblCellSpacing\":\r\n                    style[\"border-spacing\"] = values.valueOfMargin(c);\r\n                    style[\"border-collapse\"] = \"separate\";\r\n                    break;\r\n\r\n                case \"pBdr\":\r\n                    this.parseBorderProperties(c, style);\r\n                    break;\r\n                \r\n                case \"bdr\":\r\n                    style[\"border\"] = values.valueOfBorder(c);\r\n                    break;\r\n\r\n                case \"tcBorders\":\r\n                    this.parseBorderProperties(c, style);\r\n                    break;\r\n\r\n                case \"vanish\":\r\n                    if (xml.boolAttr(c, \"val\", true))\r\n                        style[\"display\"] = \"none\";\r\n                    break;\r\n\r\n\t\t\t\tcase \"kern\":\r\n\t\t\t\t\t//TODO\r\n\t\t\t\t\t//style['letter-spacing'] = xml.lengthAttr(elem, 'val', LengthUsage.FontSize);\r\n\t\t\t\t\tbreak;\r\n\r\n                case \"noWrap\":\r\n                    //TODO\r\n                    //style[\"white-space\"] = \"nowrap\";\r\n                    break;\r\n\r\n                case \"tblCellMar\":\r\n                case \"tcMar\":\r\n                    this.parseMarginProperties(c, childStyle || style);\r\n                    break;\r\n\r\n                case \"tblLayout\":\r\n                    style[\"table-layout\"] = values.valueOfTblLayout(c);\r\n                    break;\r\n\r\n                case \"vAlign\":\r\n                    style[\"vertical-align\"] = values.valueOfTextAlignment(c);\r\n                    break;\r\n\r\n                case \"spacing\":\r\n                    if (elem.localName == \"pPr\")\r\n                        this.parseSpacing(c, style);\r\n                    break;\r\n\r\n\t\t\t\tcase \"wordWrap\":\r\n\t\t\t\t\tif (xml.boolAttr(c, \"val\")) //TODO: test with examples\r\n\t\t\t\t\t\tstyle[\"overflow-wrap\"] = \"break-word\";\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bCs\":  \r\n\t\t\t\tcase \"iCs\":\r\n\t\t\t\tcase \"szCs\":\r\n\t\t\t\tcase \"tabs\": //ignore - tabs is parsed by other parser\r\n\t\t\t\tcase \"outlineLvl\": //TODO\r\n\t\t\t\tcase \"contextualSpacing\": //TODO\r\n\t\t\t\tcase \"tblStyleColBandSize\": //TODO\r\n\t\t\t\tcase \"tblStyleRowBandSize\": //TODO\r\n                case \"webHidden\": //TODO - maybe web-hidden should be implemented\r\n\t\t\t\tcase \"pageBreakBefore\": //TODO - maybe ignore \r\n\t\t\t\tcase \"keepLines\": //TODO - maybe ignore\r\n\t\t\t\tcase \"keepNext\": //TODO - maybe ignore\r\n\t\t\t\tcase \"lang\":\r\n                case \"noProof\": //ignore spellcheck\r\n                    //TODO ignore\r\n                    break;\r\n\r\n                default:\r\n                    if (this.options.debug)\r\n                        console.warn(`DOCX: Unknown document element: ${elem.localName}.${c.localName}` );\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return style;\r\n    }\r\n\r\n    parseUnderline(node: Element, style: Record<string, string>) {\r\n        var val = xml.attr(node, \"val\");\r\n\r\n        if (val == null)\r\n            return;\r\n\r\n        switch (val) {\r\n            case \"dash\":\r\n            case \"dashDotDotHeavy\":\r\n            case \"dashDotHeavy\":\r\n            case \"dashedHeavy\":\r\n            case \"dashLong\":\r\n            case \"dashLongHeavy\":\r\n            case \"dotDash\":\r\n            case \"dotDotDash\":\r\n                style[\"text-decoration-style\"] = \"dashed\";\r\n                break;\r\n\r\n            case \"dotted\":\r\n            case \"dottedHeavy\":\r\n                style[\"text-decoration-style\"] = \"dotted\";\r\n                break;\r\n\r\n            case \"double\":\r\n                style[\"text-decoration-style\"] = \"double\";\r\n                break;\r\n\r\n            case \"single\":\r\n            case \"thick\":\r\n                style[\"text-decoration\"] = \"underline\";\r\n                break;\r\n\r\n            case \"wave\":\r\n            case \"wavyDouble\":\r\n            case \"wavyHeavy\":\r\n                style[\"text-decoration-style\"] = \"wavy\";\r\n                break;\r\n\r\n            case \"words\":\r\n                style[\"text-decoration\"] = \"underline\";\r\n                break;\r\n\r\n            case \"none\":\r\n                style[\"text-decoration\"] = \"none\";\r\n                break;\r\n        }\r\n\r\n        var col = xmlUtil.colorAttr(node, \"color\");\r\n\r\n        if (col)\r\n            style[\"text-decoration-color\"] = col;\r\n    }\r\n\r\n    parseFont(node: Element, style: Record<string, string>) {\r\n        var ascii = xml.attr(node, \"ascii\");\r\n        var asciiTheme = values.themeValue(node, \"asciiTheme\");\r\n\r\n        var fonts = [ascii, asciiTheme].filter(x => x).join(', ');\r\n\r\n        if (fonts.length > 0)\r\n            style[\"font-family\"] = fonts;\r\n    }\r\n\r\n    parseIndentation(node: Element, style: Record<string, string>) {\r\n        var firstLine = xml.lengthAttr(node, \"firstLine\");\r\n        var hanging = xml.lengthAttr(node, \"hanging\");\r\n        var left = xml.lengthAttr(node, \"left\");\r\n        var start = xml.lengthAttr(node, \"start\");\r\n        var right = xml.lengthAttr(node, \"right\");\r\n        var end = xml.lengthAttr(node, \"end\");\r\n\r\n        if (firstLine) style[\"text-indent\"] = firstLine;\r\n        if (hanging) style[\"text-indent\"] = `-${hanging}`;\r\n        if (left || start) style[\"margin-left\"] = left || start;\r\n        if (right || end) style[\"margin-right\"] = right || end;\r\n    }\r\n\r\n    parseSpacing(node: Element, style: Record<string, string>) {\r\n        var before = xml.lengthAttr(node, \"before\");\r\n        var after = xml.lengthAttr(node, \"after\");\r\n        var line = xml.intAttr(node, \"line\", null);\r\n        var lineRule = xml.attr(node, \"lineRule\");\r\n\r\n        if (before) style[\"margin-top\"] = before;\r\n        if (after) style[\"margin-bottom\"] = after;\r\n        \r\n        if (line !== null) {\r\n            switch(lineRule) {\r\n                case \"auto\": \r\n                    style[\"line-height\"] = `${(line / 240).toFixed(2)}`;\r\n                    break;\r\n\r\n                case \"atLeast\":\r\n                    style[\"line-height\"] = `calc(100% + ${line / 20}pt)`;\r\n                    break;\r\n\r\n                default:\r\n                    style[\"line-height\"] = style[\"min-height\"] = `${line / 20}pt`\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    parseMarginProperties(node: Element, output: Record<string, string>) {\r\n        xmlUtil.foreach(node, c => {\r\n            switch (c.localName) {\r\n                case \"left\":\r\n                    output[\"padding-left\"] = values.valueOfMargin(c);\r\n                    break;\r\n\r\n                case \"right\":\r\n                    output[\"padding-right\"] = values.valueOfMargin(c);\r\n                    break;\r\n\r\n                case \"top\":\r\n                    output[\"padding-top\"] = values.valueOfMargin(c);\r\n                    break;\r\n\r\n                case \"bottom\":\r\n                    output[\"padding-bottom\"] = values.valueOfMargin(c);\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    parseTrHeight(node: Element, output: Record<string, string>) {\r\n        switch (xml.attr(node, \"hRule\")) {\r\n            case \"exact\":\r\n                output[\"height\"] = xml.lengthAttr(node, \"val\");\r\n                break;\r\n\r\n            case \"atLeast\":\r\n            default:\r\n                output[\"height\"] = xml.lengthAttr(node, \"val\");\r\n                // min-height doesn't work for tr\r\n                //output[\"min-height\"] = xml.sizeAttr(node, \"val\");  \r\n                break;\r\n        }\r\n    }\r\n\r\n    parseBorderProperties(node: Element, output: Record<string, string>) {\r\n        xmlUtil.foreach(node, c => {\r\n            switch (c.localName) {\r\n                case \"start\":\r\n                case \"left\":\r\n                    output[\"border-left\"] = values.valueOfBorder(c);\r\n                    break;\r\n\r\n                case \"end\":\r\n                case \"right\":\r\n                    output[\"border-right\"] = values.valueOfBorder(c);\r\n                    break;\r\n\r\n                case \"top\":\r\n                    output[\"border-top\"] = values.valueOfBorder(c);\r\n                    break;\r\n\r\n                case \"bottom\":\r\n                    output[\"border-bottom\"] = values.valueOfBorder(c);\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nconst knownColors = ['black','blue','cyan','darkBlue','darkCyan','darkGray','darkGreen','darkMagenta','darkRed','darkYellow','green','lightGray','magenta','none','red','white','yellow'];\r\n\r\nclass xmlUtil {\r\n    static foreach(node: Element, cb: (n: Element) => void) {\r\n        for (var i = 0; i < node.childNodes.length; i++) {\r\n            let n = node.childNodes[i];\r\n\r\n            if (n.nodeType == Node.ELEMENT_NODE)\r\n                cb(<Element>n);\r\n        }\r\n    }\r\n\r\n    static colorAttr(node: Element, attrName: string, defValue: string = null, autoColor: string = 'black') {\r\n        var v = xml.attr(node, attrName);\r\n\r\n        if (v) {\r\n            if (v == \"auto\") {\r\n                return autoColor;\r\n            } else if (knownColors.includes(v)) {\r\n                return v;\r\n            }\r\n\r\n            return `#${v}`;\r\n        }\r\n\r\n        var themeColor = xml.attr(node, \"themeColor\");\r\n\r\n        return themeColor ? `var(--docx-${themeColor}-color)` : defValue;\r\n    }\r\n\r\n    static sizeValue(node: Element, type: LengthUsageType = LengthUsage.Dxa) {\r\n        return convertLength(node.textContent, type);\r\n    }\r\n}\r\n\r\nclass values {\r\n    static themeValue(c: Element, attr: string) {\r\n        var val = xml.attr(c, attr); \r\n        return val ? `var(--docx-${val}-font)` : null;\r\n    }\r\n\r\n    static valueOfSize(c: Element, attr: string) {\r\n        var type = LengthUsage.Dxa;\r\n\r\n        switch (xml.attr(c, \"type\")) {\r\n            case \"dxa\": break;\r\n            case \"pct\": type = LengthUsage.Percent; break;\r\n            case \"auto\": return \"auto\";\r\n        }\r\n\r\n        return xml.lengthAttr(c, attr, type);\r\n    }\r\n\r\n    static valueOfMargin(c: Element) {\r\n        return xml.lengthAttr(c, \"w\");\r\n    }\r\n\r\n    static valueOfBorder(c: Element) {\r\n        var type = xml.attr(c, \"val\");\r\n\r\n        if (type == \"nil\")\r\n            return \"none\";\r\n\r\n        var color = xmlUtil.colorAttr(c, \"color\");\r\n        var size = xml.lengthAttr(c, \"sz\", LengthUsage.Border);\r\n\r\n        return `${size} solid ${color == \"auto\" ? autos.borderColor : color}`;\r\n    }\r\n\r\n    static valueOfTblLayout(c: Element) {\r\n        var type = xml.attr(c, \"val\");\r\n        return type == \"fixed\" ? \"fixed\" : \"auto\";\r\n    }\r\n\r\n    static classNameOfCnfStyle(c: Element) {\r\n        const val = xml.attr(c, \"val\");\r\n\t\tconst classes = [\r\n\t\t\t'first-row', 'last-row', 'first-col', 'last-col', \r\n\t\t\t'odd-col', 'even-col', 'odd-row', 'even-row', \r\n\t\t\t'ne-cell', 'nw-cell', 'se-cell', 'sw-cell'\r\n\t\t];\r\n\r\n\t\treturn classes.filter((_, i) => val[i] == '1').join(' ');\r\n    }\r\n\r\n    static valueOfJc(c: Element) {\r\n        var type = xml.attr(c, \"val\");\r\n\r\n        switch (type) {\r\n            case \"start\":\r\n            case \"left\": return \"left\";\r\n            case \"center\": return \"center\";\r\n            case \"end\":\r\n            case \"right\": return \"right\";\r\n            case \"both\": return \"justify\";\r\n        }\r\n\r\n        return type;\r\n    }\r\n\r\n    static valueOfVertAlign(c: Element, asTagName: boolean = false) {\r\n        var type = xml.attr(c, \"val\");\r\n\r\n        switch (type) {\r\n            case \"subscript\": return \"sub\";\r\n            case \"superscript\": return asTagName ? \"sup\" : \"super\";\r\n        }\r\n\r\n        return asTagName ? null : type;\r\n    }\r\n\r\n    static valueOfTextAlignment(c: Element) {\r\n        var type = xml.attr(c, \"val\");\r\n\r\n        switch (type) {\r\n            case \"auto\":\r\n            case \"baseline\": return \"baseline\";\r\n            case \"top\": return \"top\";\r\n            case \"center\": return \"middle\";\r\n            case \"bottom\": return \"bottom\";\r\n        }\r\n\r\n        return type;\r\n    }\r\n\r\n    static addSize(a: string, b: string): string {\r\n        if (a == null) return b;\r\n        if (b == null) return a;\r\n\r\n        return `calc(${a} + ${b})`; //TODO\r\n    }\r\n\r\n    static classNameOftblLook(c: Element) {\r\n\t\tconst val = xml.hexAttr(c, \"val\", 0);\r\n        let className = \"\";\r\n\r\n        if (xml.boolAttr(c, \"firstRow\") || (val & 0x0020)) className += \" first-row\";\r\n        if (xml.boolAttr(c, \"lastRow\") || (val & 0x0040)) className += \" last-row\";\r\n        if (xml.boolAttr(c, \"firstColumn\") || (val & 0x0080)) className += \" first-col\";\r\n        if (xml.boolAttr(c, \"lastColumn\") || (val & 0x0100)) className += \" last-col\";\r\n        if (xml.boolAttr(c, \"noHBand\") || (val & 0x0200)) className += \" no-hband\";\r\n        if (xml.boolAttr(c, \"noVBand\") || (val & 0x0400)) className += \" no-vband\";\r\n\r\n        return className.trim();\r\n    }\r\n}","import { Part } from \"../common/part\";\r\nimport { CorePropsDeclaration, parseCoreProps } from \"./core-props\";\r\n\r\nexport class CorePropsPart extends Part {\r\n    props: CorePropsDeclaration;\r\n\r\n    parseXml(root: Element) {\r\n        this.props = parseCoreProps(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface CorePropsDeclaration {\r\n    title: string,\r\n    description: string,\r\n    subject: string,\r\n    creator: string,\r\n    keywords: string,\r\n    language: string,\r\n    lastModifiedBy: string,\r\n    revision: number,\r\n}\r\n\r\nexport function parseCoreProps(root: Element, xmlParser: XmlParser): CorePropsDeclaration {\r\n    const result = <CorePropsDeclaration>{};\r\n\r\n    for (let el of xmlParser.elements(root)) {\r\n        switch (el.localName) {\r\n            case \"title\": result.title = el.textContent; break;\r\n            case \"description\": result.description = el.textContent; break;\r\n            case \"subject\": result.subject = el.textContent; break;\r\n            case \"creator\": result.creator = el.textContent; break;\r\n            case \"keywords\": result.keywords = el.textContent; break;\r\n            case \"language\": result.language = el.textContent; break;\r\n            case \"lastModifiedBy\": result.lastModifiedBy = el.textContent; break;\r\n            case \"revision\": el.textContent && (result.revision = parseInt(el.textContent)); break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import { Part } from \"../common/part\";\r\nimport { CustomProperty, parseCustomProps } from \"./custom-props\";\r\n\r\nexport class CustomPropsPart extends Part {\r\n    props: CustomProperty[];\r\n\r\n    parseXml(root: Element) {\r\n        this.props = parseCustomProps(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface CustomProperty {\r\n\tformatId: string;\r\n\tname: string;\r\n\ttype: string;\r\n\tvalue: string;\r\n}\r\n\r\nexport function parseCustomProps(root: Element, xml: XmlParser): CustomProperty[] {\r\n\treturn xml.elements(root, \"property\").map(e => {\r\n\t\tconst firstChild = e.firstChild;\r\n\r\n\t\treturn {\r\n\t\t\tformatId: xml.attr(e, \"fmtid\"),\r\n\t\t\tname: xml.attr(e, \"name\"),\r\n\t\t\ttype: firstChild.nodeName,\r\n\t\t\tvalue: firstChild.textContent\r\n\t\t};\r\n\t});\r\n}","import { Part } from \"../common/part\";\r\nimport { ExtendedPropsDeclaration, parseExtendedProps } from \"./extended-props\";\r\n\r\nexport class ExtendedPropsPart extends Part {\r\n    props: ExtendedPropsDeclaration;\r\n\r\n    parseXml(root: Element) {\r\n        this.props = parseExtendedProps(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface ExtendedPropsDeclaration {\r\n    template: string,\r\n    totalTime: number,\r\n    pages: number,\r\n    words: number,\r\n    characters: number,\r\n    application: string,\r\n    lines: number,\r\n    paragraphs: number,\r\n    company: string,\r\n    appVersion: string\r\n}\r\n\r\nexport function parseExtendedProps(root: Element, xmlParser: XmlParser): ExtendedPropsDeclaration {\r\n    const result = <ExtendedPropsDeclaration>{\r\n\r\n    };\r\n\r\n    for (let el of xmlParser.elements(root)) {\r\n        switch (el.localName) {\r\n            case \"Template\":\r\n                result.template = el.textContent;\r\n                break;\r\n            case \"Pages\":\r\n                result.pages = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Words\":\r\n                result.words = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Characters\":\r\n                result.characters = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Application\":\r\n                result.application = el.textContent;\r\n                break;\r\n            case \"Lines\":\r\n                result.lines = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Paragraphs\":\r\n                result.paragraphs = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Company\":\r\n                result.company = el.textContent;\r\n                break;\r\n            case \"AppVersion\":\r\n                result.appVersion = el.textContent;\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction safeParseToInt(value: string): number {\r\n    if (typeof value === 'undefined')\r\n        return;\r\n    return parseInt(value);\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { DomType, OpenXmlElement } from \"./dom\";\r\n\r\nexport interface WmlBookmarkStart extends OpenXmlElement {\r\n    id: string;\r\n    name: string;\r\n    colFirst: number;\r\n    colLast: number;\r\n}\r\n\r\nexport interface WmlBookmarkEnd extends OpenXmlElement {\r\n    id: string;\r\n}\r\n\r\nexport function parseBookmarkStart(elem: Element, xml: XmlParser): WmlBookmarkStart {\r\n    return {\r\n        type: DomType.BookmarkStart,\r\n        id: xml.attr(elem, \"id\"),\r\n        name: xml.attr(elem, \"name\"),\r\n        colFirst: xml.intAttr(elem, \"colFirst\"),\r\n        colLast: xml.intAttr(elem, \"colLast\")\r\n    }\r\n}\r\n\r\nexport function parseBookmarkEnd(elem: Element, xml: XmlParser): WmlBookmarkEnd {\r\n    return {\r\n        type: DomType.BookmarkEnd,\r\n        id: xml.attr(elem, \"id\")\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { Length, LengthUsage } from \"./common\";\r\n\r\nexport interface Border {\r\n    color: string;\r\n    type: string;\r\n    size: Length;\r\n    frame: boolean;\r\n    shadow: boolean;\r\n    offset: Length;\r\n}\r\n\r\nexport interface Borders {\r\n    top: Border;\r\n    left: Border;\r\n    right: Border;\r\n    bottom: Border;\r\n}\r\n\r\nexport function parseBorder(elem: Element, xml: XmlParser): Border {\r\n    return {\r\n        type: xml.attr(elem, \"val\"),\r\n        color: xml.attr(elem, \"color\"),\r\n        size: xml.lengthAttr(elem, \"sz\", LengthUsage.Border),\r\n        offset: xml.lengthAttr(elem, \"space\", LengthUsage.Point),\r\n        frame: xml.boolAttr(elem, 'frame'),\r\n        shadow: xml.boolAttr(elem, 'shadow')\r\n    };\r\n}\r\n\r\nexport function parseBorders(elem: Element, xml: XmlParser): Borders {\r\n    var result = <Borders>{};\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"left\": result.left = parseBorder(e, xml); break;\r\n            case \"top\": result.top = parseBorder(e, xml); break;\r\n            case \"right\": result.right = parseBorder(e, xml); break;\r\n            case \"bottom\": result.bottom = parseBorder(e, xml); break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport const ns = {\r\n    wordml: \"http://schemas.openxmlformats.org/wordprocessingml/2006/main\",\r\n    drawingml: \"http://schemas.openxmlformats.org/drawingml/2006/main\",\r\n    picture: \"http://schemas.openxmlformats.org/drawingml/2006/picture\",\r\n\tcompatibility: \"http://schemas.openxmlformats.org/markup-compatibility/2006\"\r\n}\r\n\r\nexport type LengthType = \"px\" | \"pt\" | \"%\";\r\nexport type Length = string;\r\n\r\nexport interface Font {\r\n    name: string;\r\n    family: string;\r\n}\r\n\r\nexport interface CommonProperties {\r\n    fontSize: Length;\r\n    color: string;\r\n}\r\n\r\nexport type LengthUsageType = { mul: number, unit: LengthType };\r\n\r\nexport const LengthUsage: Record<string, LengthUsageType> = {\r\n    Dxa: { mul: 0.05, unit: \"pt\" }, //twips\r\n    Emu: { mul: 1 / 12700, unit: \"pt\" },\r\n    FontSize: { mul: 0.5, unit: \"pt\" },\r\n    Border: { mul: 0.125, unit: \"pt\" },\r\n    Point: { mul: 1, unit: \"pt\" },\r\n    Percent: { mul: 0.02, unit: \"%\" },\r\n    LineHeight: { mul: 1 / 240, unit: null }\r\n}\r\n\r\nexport function convertLength(val: string, usage: LengthUsageType = LengthUsage.Dxa): string {\r\n    //\"simplified\" docx documents use pt's as units\r\n    if (val == null || /.+(p[xt]|[%])$/.test(val)) {\r\n        return val;\r\n    }\r\n\r\n\treturn `${(parseInt(val) * usage.mul).toFixed(2)}${usage.unit ?? ''}`;\r\n}\r\n\r\nexport function convertBoolean(v: string, defaultValue = false): boolean {\r\n    switch (v) {\r\n        case \"1\": return true;\r\n        case \"0\": return false;\r\n        case \"on\": return true;\r\n        case \"off\": return false;\r\n        case \"true\": return true;\r\n        case \"false\": return false;\r\n        default: return defaultValue;\r\n    }\r\n}\r\n\r\nexport function convertPercentage(val: string): number {\r\n    return val ? parseInt(val) / 100 : null;\r\n}\r\n\r\nexport function parseCommonProperty(elem: Element, props: CommonProperties, xml: XmlParser): boolean {\r\n    if(elem.namespaceURI != ns.wordml)\r\n        return false;\r\n\r\n    switch(elem.localName) {\r\n        case \"color\": \r\n            props.color = xml.attr(elem, \"val\");\r\n            break;\r\n\r\n        case \"sz\":\r\n            props.fontSize = xml.lengthAttr(elem, \"val\", LengthUsage.FontSize);\r\n            break;\r\n\r\n        default:\r\n            return false;\r\n    }\r\n\r\n    return true;\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { DocumentElement } from \"./document\";\r\n\r\nexport class DocumentPart extends Part {\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n    \r\n    body: DocumentElement\r\n\r\n    parseXml(root: Element) {\r\n        this.body = this._documentParser.parseDocumentFile(root);\r\n    }\r\n}","export enum DomType {\r\n    Document = \"document\",\r\n    Paragraph = \"paragraph\",\r\n    Run = \"run\",\r\n    Break = \"break\",\r\n    NoBreakHyphen = \"noBreakHyphen\",\r\n    Table = \"table\",\r\n    Row = \"row\",\r\n    Cell = \"cell\",\r\n    Hyperlink = \"hyperlink\",\r\n    Drawing = \"drawing\",\r\n    Image = \"image\",\r\n    Text = \"text\",\r\n    Tab = \"tab\",\r\n    Symbol = \"symbol\",\r\n    BookmarkStart = \"bookmarkStart\",\r\n    BookmarkEnd = \"bookmarkEnd\",\r\n    Footer = \"footer\",\r\n    Header = \"header\",\r\n    FootnoteReference = \"footnoteReference\", \r\n\tEndnoteReference = \"endnoteReference\",\r\n    Footnote = \"footnote\",\r\n    Endnote = \"endnote\",\r\n    SimpleField = \"simpleField\",\r\n    ComplexField = \"complexField\",\r\n    Instruction = \"instruction\"\r\n}\r\n\r\nexport interface OpenXmlElement {\r\n    type: DomType;\r\n    children?: OpenXmlElement[];\r\n    cssStyle?: Record<string, string>;\r\n    \r\n\tstyleName?: string; //style name\r\n\tclassName?: string; //class mods\r\n\r\n    parent?: OpenXmlElement;\r\n}\r\n\r\nexport interface WmlHyperlink extends OpenXmlElement {\r\n    href?: string;\r\n}\r\n\r\nexport interface WmlNoteReference extends OpenXmlElement {\r\n    id: string;\r\n}\r\n\r\nexport interface WmlBreak extends OpenXmlElement{\r\n    break: \"page\" | \"lastRenderedPageBreak\" | \"textWrapping\";\r\n}\r\n\r\nexport interface WmlText extends OpenXmlElement{\r\n    text: string;\r\n}\r\n\r\nexport interface WmlSymbol extends OpenXmlElement {\r\n    font: string;\r\n    char: string;\r\n}\r\n\r\nexport interface WmlTable extends OpenXmlElement {\r\n    columns?: WmlTableColumn[];\r\n    cellStyle?: Record<string, string>;\r\n\r\n\tcolBandSize?: number;\r\n\trowBandSize?: number;\r\n}\r\n\r\nexport interface WmlTableRow extends OpenXmlElement {\r\n}\r\n\r\nexport interface WmlTableCell extends OpenXmlElement {\r\n\tverticalMerge?: 'restart' | 'continue' | string;\r\n    span?: number;\r\n}\r\n\r\nexport interface IDomImage extends OpenXmlElement {\r\n    src: string;\r\n}\r\n\r\nexport interface WmlTableColumn {\r\n    width?: string;\r\n}\r\n\r\nexport interface IDomNumbering {\r\n    id: string;\r\n    level: number;\r\n    pStyleName: string;\r\n    pStyle: Record<string, string>;\r\n    rStyle: Record<string, string>;\r\n    levelText?: string;\r\n    suff: string;\r\n    format?: string;\r\n    bullet?: NumberingPicBullet;\r\n}\r\n\r\nexport interface NumberingPicBullet {\r\n    id: number;\r\n    src: string;\r\n    style?: string;\r\n}\r\n","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { Length } from \"./common\";\r\n\r\nexport interface LineSpacing {\r\n    after: Length;\r\n    before: Length;\r\n    line: number;\r\n    lineRule: \"atLeast\" | \"exactly\" | \"auto\";\r\n}\r\n\r\nexport function parseLineSpacing(elem: Element, xml: XmlParser): LineSpacing {\r\n    return {\r\n        before: xml.lengthAttr(elem, \"before\"),\r\n        after: xml.lengthAttr(elem, \"after\"),\r\n        line: xml.intAttr(elem, \"line\"),\r\n        lineRule: xml.attr(elem, \"lineRule\")\r\n    } as LineSpacing;\r\n}","import { OpenXmlElement } from \"./dom\";\r\nimport { CommonProperties, Length, ns, parseCommonProperty } from \"./common\";\r\nimport { Borders } from \"./border\";\r\nimport { parseSectionProperties, SectionProperties } from \"./section\";\r\nimport { LineSpacing, parseLineSpacing } from \"./line-spacing\";\r\nimport { XmlParser } from \"../parser/xml-parser\";\r\nimport { parseRunProperties, RunProperties } from \"./run\";\r\n\r\nexport interface WmlParagraph extends OpenXmlElement, ParagraphProperties {\r\n}\r\n\r\nexport interface ParagraphProperties extends CommonProperties {\r\n    sectionProps: SectionProperties;\r\n    tabs: ParagraphTab[];\r\n    numbering: ParagraphNumbering;\r\n\r\n    border: Borders;\r\n    textAlignment: \"auto\" | \"baseline\" | \"bottom\" | \"center\" | \"top\" | string;\r\n    lineSpacing: LineSpacing;\r\n    keepLines: boolean;\r\n    keepNext: boolean;\r\n    pageBreakBefore: boolean;\r\n    outlineLevel: number;\r\n\tstyleName?: string;\r\n\r\n    runProps: RunProperties;\r\n}\r\n\r\nexport interface ParagraphTab {\r\n    style: \"bar\" | \"center\" | \"clear\" | \"decimal\" | \"end\" | \"num\" | \"start\" | \"left\" | \"right\";\r\n    leader: \"none\" | \"dot\" | \"heavy\" | \"hyphen\" | \"middleDot\" | \"underscore\";\r\n    position: Length;\r\n}\r\n\r\nexport interface ParagraphNumbering {\r\n    id: string;\r\n    level: number;\r\n}\r\n\r\nexport function parseParagraphProperties(elem: Element, xml: XmlParser): ParagraphProperties {\r\n    let result = <ParagraphProperties>{};\r\n\r\n    for(let el of xml.elements(elem)) {\r\n        parseParagraphProperty(el, result, xml);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseParagraphProperty(elem: Element, props: ParagraphProperties, xml: XmlParser) {\r\n    if (elem.namespaceURI != ns.wordml)\r\n        return false;\r\n\r\n    if(parseCommonProperty(elem, props, xml))\r\n        return true;\r\n\r\n    switch (elem.localName) {\r\n        case \"tabs\":\r\n            props.tabs = parseTabs(elem, xml);\r\n            break;\r\n\r\n        case \"sectPr\":\r\n            props.sectionProps = parseSectionProperties(elem, xml);\r\n            break;\r\n\r\n        case \"numPr\":\r\n            props.numbering = parseNumbering(elem, xml);\r\n            break;\r\n        \r\n        case \"spacing\":\r\n            props.lineSpacing = parseLineSpacing(elem, xml);\r\n            return false; // TODO\r\n            break;\r\n\r\n        case \"textAlignment\":\r\n            props.textAlignment = xml.attr(elem, \"val\");\r\n            return false; //TODO\r\n            break;\r\n\r\n        case \"keepNext\":\r\n            props.keepLines = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n    \r\n        case \"keepNext\":\r\n            props.keepNext = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n        \r\n        case \"pageBreakBefore\":\r\n            props.pageBreakBefore = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n        \r\n        case \"outlineLvl\":\r\n            props.outlineLevel = xml.intAttr(elem, \"val\");\r\n            break;\r\n\r\n        case \"pStyle\":\r\n            props.styleName = xml.attr(elem, \"val\");\r\n            break;\r\n\r\n        case \"rPr\":\r\n            props.runProps = parseRunProperties(elem, xml);\r\n            break;\r\n        \r\n        default:\r\n            return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function parseTabs(elem: Element, xml: XmlParser): ParagraphTab[] {\r\n    return xml.elements(elem, \"tab\")\r\n        .map(e => <ParagraphTab>{\r\n            position: xml.lengthAttr(e, \"pos\"),\r\n            leader: xml.attr(e, \"leader\"),\r\n            style: xml.attr(e, \"val\")\r\n        });\r\n}\r\n\r\nexport function parseNumbering(elem: Element, xml: XmlParser): ParagraphNumbering {\r\n    var result = <ParagraphNumbering>{};\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"numId\":\r\n                result.id = xml.attr(e, \"val\");\r\n                break;\r\n\r\n            case \"ilvl\":\r\n                result.level = xml.intAttr(e, \"val\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { CommonProperties, parseCommonProperty } from \"./common\";\r\nimport { OpenXmlElement } from \"./dom\";\r\n\r\nexport interface WmlRun extends OpenXmlElement, RunProperties {\r\n    id?: string;\r\n    verticalAlign?: string;\r\n\tfieldRun?: boolean;  \r\n}\r\n\r\nexport interface RunProperties extends CommonProperties {\r\n\r\n}\r\n\r\nexport function parseRunProperties(elem: Element, xml: XmlParser): RunProperties {\r\n    let result = <RunProperties>{};\r\n\r\n    for(let el of xml.elements(elem)) {\r\n        parseRunProperty(el, result, xml);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseRunProperty(elem: Element, props: RunProperties, xml: XmlParser) {\r\n    if (parseCommonProperty(elem, props, xml))\r\n        return true;\r\n\r\n    return false;\r\n}","import globalXmlParser, { XmlParser } from \"../parser/xml-parser\";\r\nimport { Borders, parseBorders } from \"./border\";\r\nimport { Length } from \"./common\";\r\n\r\nexport interface Column {\r\n    space: Length;\r\n    width: Length;\r\n}\r\n\r\nexport interface Columns {\r\n    space: Length;\r\n    numberOfColumns: number;\r\n    separator: boolean;\r\n    equalWidth: boolean;\r\n    columns: Column[];\r\n}\r\n\r\nexport interface PageSize {\r\n    width: Length, \r\n    height: Length, \r\n    orientation: \"landscape\" | string \r\n}\r\n\r\nexport interface PageNumber {\r\n    start: number;\r\n    chapSep: \"colon\" | \"emDash\" | \"endash\" | \"hyphen\" | \"period\" | string;\r\n    chapStyle: string;\r\n    format: \"none\" | \"cardinalText\" | \"decimal\" | \"decimalEnclosedCircle\" | \"decimalEnclosedFullstop\" \r\n        | \"decimalEnclosedParen\" | \"decimalZero\" | \"lowerLetter\" | \"lowerRoman\"\r\n        | \"ordinalText\" | \"upperLetter\" | \"upperRoman\" | string;\r\n}\r\n\r\nexport interface PageMargins {\r\n    top: Length;\r\n    right: Length;\r\n    bottom: Length;\r\n    left: Length;\r\n    header: Length;\r\n    footer: Length;\r\n    gutter: Length;\r\n}\r\n\r\nexport enum SectionType {\r\n    Continuous = \"continuous\",\r\n    NextPage = \"nextPage\", \r\n    NextColumn = \"nextColumn\",\r\n    EvenPage = \"evenPage\",\r\n    OddPage = \"oddPage\",\r\n}\r\n\r\nexport interface FooterHeaderReference {\r\n    id: string;\r\n    type: string | \"first\" | \"even\" | \"default\";\r\n}\r\n\r\nexport interface SectionProperties {\r\n    type: SectionType | string;\r\n    pageSize: PageSize,\r\n    pageMargins: PageMargins,\r\n    pageBorders: Borders;\r\n    pageNumber: PageNumber;\r\n    columns: Columns;\r\n    footerRefs: FooterHeaderReference[];\r\n    headerRefs: FooterHeaderReference[];\r\n    titlePage: boolean;\r\n}\r\n\r\nexport function parseSectionProperties(elem: Element, xml: XmlParser = globalXmlParser): SectionProperties {\r\n    var section = <SectionProperties>{};\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"pgSz\":\r\n                section.pageSize = {\r\n                    width: xml.lengthAttr(e, \"w\"),\r\n                    height: xml.lengthAttr(e, \"h\"),\r\n                    orientation: xml.attr(e, \"orient\")\r\n                }\r\n                break;\r\n\r\n            case \"type\":\r\n                section.type = xml.attr(e, \"val\");\r\n                break;\r\n\r\n            case \"pgMar\":\r\n                section.pageMargins = {\r\n                    left: xml.lengthAttr(e, \"left\"),\r\n                    right: xml.lengthAttr(e, \"right\"),\r\n                    top: xml.lengthAttr(e, \"top\"),\r\n                    bottom: xml.lengthAttr(e, \"bottom\"),\r\n                    header: xml.lengthAttr(e, \"header\"),\r\n                    footer: xml.lengthAttr(e, \"footer\"),\r\n                    gutter: xml.lengthAttr(e, \"gutter\"),\r\n                };\r\n                break;\r\n\r\n            case \"cols\":\r\n                section.columns = parseColumns(e, xml);\r\n                break;\r\n\r\n            case \"headerReference\":\r\n                (section.headerRefs ?? (section.headerRefs = [])).push(parseFooterHeaderReference(e, xml)); \r\n                break;\r\n            \r\n            case \"footerReference\":\r\n                (section.footerRefs ?? (section.footerRefs = [])).push(parseFooterHeaderReference(e, xml)); \r\n                break;\r\n\r\n            case \"titlePg\":\r\n                section.titlePage = xml.boolAttr(e, \"val\", true);\r\n                break;\r\n\r\n            case \"pgBorders\":\r\n                section.pageBorders = parseBorders(e, xml);\r\n                break;\r\n\r\n            case \"pgNumType\":\r\n                section.pageNumber = parsePageNumber(e, xml);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return section;\r\n}\r\n\r\nfunction parseColumns(elem: Element, xml: XmlParser): Columns {\r\n    return {\r\n        numberOfColumns: xml.intAttr(elem, \"num\"),\r\n        space: xml.lengthAttr(elem, \"space\"),\r\n        separator: xml.boolAttr(elem, \"sep\"),\r\n        equalWidth: xml.boolAttr(elem, \"equalWidth\", true),\r\n        columns: xml.elements(elem, \"col\")\r\n            .map(e => <Column>{\r\n                width: xml.lengthAttr(e, \"w\"),\r\n                space: xml.lengthAttr(e, \"space\")\r\n            })\r\n    };\r\n}\r\n\r\nfunction parsePageNumber(elem: Element, xml: XmlParser): PageNumber {\r\n    return {\r\n        chapSep: xml.attr(elem, \"chapSep\"),\r\n        chapStyle: xml.attr(elem, \"chapStyle\"),\r\n        format: xml.attr(elem, \"fmt\"),\r\n        start: xml.intAttr(elem, \"start\")\r\n    };\r\n}\r\n\r\nfunction parseFooterHeaderReference(elem: Element, xml: XmlParser): FooterHeaderReference {\r\n    return {\r\n        id: xml.attr(elem, \"id\"),\r\n        type: xml.attr(elem, \"type\"),\r\n    }\r\n}","import { WordDocument } from './word-document';\r\nimport { DocumentParser } from './document-parser';\r\nimport { HtmlRenderer } from './html-renderer';\r\n\r\nexport interface Options {\r\n    inWrapper: boolean;\r\n    ignoreWidth: boolean;\r\n    ignoreHeight: boolean;\r\n    ignoreFonts: boolean;\r\n    breakPages: boolean;\r\n    debug: boolean;\r\n    experimental: boolean;\r\n    className: string;\r\n    trimXmlDeclaration: boolean;\r\n    renderHeaders: boolean;\r\n    renderFooters: boolean;\r\n    renderFootnotes: boolean;\r\n\trenderEndnotes: boolean;\r\n    ignoreLastRenderedPageBreak: boolean;\r\n\tuseBase64URL: boolean;\r\n}\r\n\r\nexport const defaultOptions: Options = {\r\n    ignoreHeight: false,\r\n    ignoreWidth: false,\r\n    ignoreFonts: false,\r\n    breakPages: true,\r\n    debug: false,\r\n    experimental: false,\r\n    className: \"docx\",\r\n    inWrapper: true,\r\n    trimXmlDeclaration: true,\r\n    ignoreLastRenderedPageBreak: true,\r\n    renderHeaders: true,\r\n    renderFooters: true,\r\n    renderFootnotes: true,\r\n\trenderEndnotes: true,\r\n\tuseBase64URL: false\r\n}\r\n\r\nexport function praseAsync(data: Blob | any, userOptions: Partial<Options> = null): Promise<any>  {\r\n    const ops = { ...defaultOptions, ...userOptions };\r\n    return WordDocument.load(data, new DocumentParser(ops), ops);\r\n}\r\n\r\nexport function renderAsync(data: Blob | any, bodyContainer: HTMLElement, styleContainer: HTMLElement = null, userOptions: Partial<Options> = null): Promise<any> {\r\n    const ops = { ...defaultOptions, ...userOptions };\r\n    const renderer = new HtmlRenderer(window.document);\r\n\r\n    return WordDocument\r\n        .load(data, new DocumentParser(ops), ops)\r\n        .then(doc => {\r\n            renderer.render(doc, bodyContainer, styleContainer, ops);\r\n            return doc;\r\n        });\r\n}","import { Part } from \"../common/part\";\r\nimport { FontDeclaration, parseFonts } from \"./fonts\";\r\n\r\nexport class FontTablePart extends Part {\r\n    fonts: FontDeclaration[];\r\n\r\n    parseXml(root: Element) {\r\n        this.fonts = parseFonts(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nconst embedFontTypeMap = {\r\n    embedRegular: 'regular',\r\n    embedBold: 'bold',\r\n    embedItalic: 'italic',\r\n    embedBoldItalic: 'boldItalic',\r\n}\r\n\r\nexport interface FontDeclaration {\r\n    name: string,\r\n    altName: string,\r\n    family: string,\r\n    embedFontRefs: EmbedFontRef[];\r\n}\r\n\r\nexport interface EmbedFontRef {\r\n    id: string;\r\n    key: string;\r\n    type: 'regular' | 'bold' | 'italic' | 'boldItalic';\r\n}\r\n\r\nexport function parseFonts(root: Element, xml: XmlParser): FontDeclaration[] {\r\n    return xml.elements(root).map(el => parseFont(el, xml));\r\n}\r\n\r\nexport function parseFont(elem: Element, xml: XmlParser): FontDeclaration {\r\n    let result = <FontDeclaration>{\r\n        name: xml.attr(elem, \"name\"),\r\n        embedFontRefs: []\r\n    };\r\n\r\n    for (let el of xml.elements(elem)) {\r\n        switch (el.localName) {\r\n            case \"family\":\r\n                result.family = xml.attr(el, \"val\");\r\n                break;\r\n\r\n            case \"altName\":\r\n                result.altName = xml.attr(el, \"val\");\r\n                break;\r\n\r\n            case \"embedRegular\":\r\n            case \"embedBold\":\r\n            case \"embedItalic\":\r\n            case \"embedBoldItalic\":\r\n                result.embedFontRefs.push(parseEmbedFontRef(el, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseEmbedFontRef(elem: Element, xml: XmlParser): EmbedFontRef {\r\n    return { \r\n        id: xml.attr(elem, \"id\"), \r\n        key: xml.attr(elem, \"fontKey\"),\r\n        type: embedFontTypeMap[elem.localName]\r\n    };\r\n}","import { DomType, OpenXmlElement } from \"../document/dom\";\r\n\r\nexport class WmlHeader implements OpenXmlElement {\r\n    type: DomType = DomType.Header;\r\n    children?: OpenXmlElement[] = [];\r\n    cssStyle?: Record<string, string> = {};\r\n    className?: string;\r\n    parent?: OpenXmlElement;\r\n}\r\n\r\nexport class WmlFooter implements OpenXmlElement {\r\n    type: DomType = DomType.Footer;\r\n    children?: OpenXmlElement[] = [];\r\n    cssStyle?: Record<string, string> = {};\r\n    className?: string;\r\n    parent?: OpenXmlElement;\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { OpenXmlElement } from \"../document/dom\";\r\nimport { WmlHeader, WmlFooter } from \"./elements\";\r\n\r\nexport abstract class BaseHeaderFooterPart<T extends OpenXmlElement = OpenXmlElement> extends Part {\r\n    rootElement: T;\r\n\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.rootElement = this.createRootElement();\r\n        this.rootElement.children = this._documentParser.parseBodyElements(root);\r\n    }\r\n\r\n    protected abstract createRootElement(): T;\r\n}\r\n\r\nexport class HeaderPart extends BaseHeaderFooterPart<WmlHeader> {\r\n    protected createRootElement(): WmlHeader {\r\n        return new WmlHeader();\r\n    }\r\n}\r\n\r\nexport class FooterPart extends BaseHeaderFooterPart<WmlFooter> {\r\n    protected createRootElement(): WmlFooter {\r\n        return new WmlFooter();\r\n    }\r\n}","import { WordDocument } from './word-document';\r\nimport {\r\n    DomType, WmlTable, IDomNumbering,\r\n    WmlHyperlink, IDomImage, OpenXmlElement, WmlTableColumn, WmlTableCell, WmlText, WmlSymbol, WmlBreak, WmlNoteReference\r\n} from './document/dom';\r\nimport { Length, CommonProperties } from './document/common';\r\nimport { Options } from './docx-preview';\r\nimport { DocumentElement } from './document/document';\r\nimport { WmlParagraph } from './document/paragraph';\r\nimport { escapeClassName, keyBy, mergeDeep } from './utils';\r\nimport { computePixelToPoint, updateTabStop } from './javascript';\r\nimport { FontTablePart } from './font-table/font-table';\r\nimport { FooterHeaderReference, SectionProperties } from './document/section';\r\nimport { WmlRun, RunProperties } from './document/run';\r\nimport { WmlBookmarkStart } from './document/bookmarks';\r\nimport { IDomStyle } from './document/style';\r\nimport { WmlBaseNote, WmlFootnote } from './notes/elements';\r\nimport { ThemePart } from './theme/theme-part';\r\nimport { BaseHeaderFooterPart } from './header-footer/parts';\r\nimport { Part } from './common/part';\r\n\r\ninterface CellPos {\r\n\tcol: number;\r\n\trow: number;\r\n}\r\n\r\ntype CellVerticalMergeType = Record<number, HTMLTableCellElement>;\r\n\r\nexport class HtmlRenderer {\r\n\r\n    className: string = \"docx\";\r\n    document: WordDocument;\r\n    options: Options;\r\n    styleMap: Record<string, IDomStyle> = {};\r\n\tcurrentPart: Part = null;\r\n\r\n\ttableVerticalMerges: CellVerticalMergeType[] = [];\r\n\tcurrentVerticalMerge: CellVerticalMergeType = null;\r\n\ttableCellPositions: CellPos[] = [];\r\n\tcurrentCellPosition: CellPos = null;\r\n\r\n    footnoteMap: Record<string, WmlFootnote> = {};\r\n\tendnoteMap: Record<string, WmlFootnote> = {};\r\n    currentFootnoteIds: string[];\r\n    currentEndnoteIds: string[] = [];\r\n    usedHederFooterParts: any[] = [];\r\n\r\n\tdefaultTabSize: Length;\t\r\n\tcurrentTabs: any[] = [];\r\n\ttabsTimeout: any = 0;\r\n\r\n    constructor(public htmlDocument: Document) {\r\n    }\r\n\r\n    render(document: WordDocument, bodyContainer: HTMLElement, styleContainer: HTMLElement = null, options: Options) {\r\n        this.document = document;\r\n        this.options = options;\r\n        this.className = options.className;\r\n        this.styleMap = null;\r\n\r\n        styleContainer = styleContainer || bodyContainer;\r\n\r\n        removeAllElements(styleContainer);\r\n        removeAllElements(bodyContainer);\r\n\r\n        appendComment(styleContainer, \"docxjs library predefined styles\");\r\n        styleContainer.appendChild(this.renderDefaultStyle());\r\n\r\n        if (document.themePart) {\r\n            appendComment(styleContainer, \"docxjs document theme values\");\r\n            this.renderTheme(document.themePart, styleContainer);\r\n        }\r\n\r\n        if (document.stylesPart != null) {\r\n            this.styleMap = this.processStyles(document.stylesPart.styles);\r\n\r\n            appendComment(styleContainer, \"docxjs document styles\");\r\n            styleContainer.appendChild(this.renderStyles(document.stylesPart.styles));\r\n        }\r\n\r\n        if (document.numberingPart) {\r\n            this.prodessNumberings(document.numberingPart.domNumberings);\r\n\r\n            appendComment(styleContainer, \"docxjs document numbering styles\");\r\n            styleContainer.appendChild(this.renderNumbering(document.numberingPart.domNumberings, styleContainer));\r\n            //styleContainer.appendChild(this.renderNumbering2(document.numberingPart, styleContainer));\r\n        }\r\n\r\n        if (document.footnotesPart) {\r\n            this.footnoteMap = keyBy(document.footnotesPart.notes, x => x.id);\r\n        }\r\n\r\n\t\tif (document.endnotesPart) {\r\n            this.endnoteMap = keyBy(document.endnotesPart.notes, x => x.id);\r\n        }\r\n\r\n\t\tif (document.settingsPart) {\r\n\t\t\tthis.defaultTabSize = document.settingsPart.settings?.defaultTabStop;\r\n\t\t}\r\n\r\n        if (!options.ignoreFonts && document.fontTablePart)\r\n            this.renderFontTable(document.fontTablePart, styleContainer);\r\n\r\n        var sectionElements = this.renderSections(document.documentPart.body);\r\n\r\n        if (this.options.inWrapper) {\r\n            bodyContainer.appendChild(this.renderWrapper(sectionElements));\r\n        } else {\r\n            appendChildren(bodyContainer, sectionElements);\r\n        }\r\n\r\n\t\tthis.refreshTabStops();\r\n    }\r\n\r\n    renderTheme(themePart: ThemePart, styleContainer: HTMLElement) {\r\n        const variables = {};\r\n        const fontScheme = themePart.theme?.fontScheme;\r\n\r\n        if (fontScheme) {\r\n            if (fontScheme.majorFont) {\r\n                variables['--docx-majorHAnsi-font'] = fontScheme.majorFont.latinTypeface;\r\n            }\r\n\r\n            if (fontScheme.minorFont) {\r\n                variables['--docx-minorHAnsi-font'] = fontScheme.minorFont.latinTypeface;\r\n            }\r\n        }\r\n\r\n        const colorScheme = themePart.theme?.colorScheme;\r\n\r\n        if (colorScheme) {\r\n            for (let [k, v] of Object.entries(colorScheme.colors)) {\r\n                variables[`--docx-${k}-color`] = `#${v}`;\r\n            }\r\n        }\r\n\r\n        const cssText = this.styleToString(`.${this.className}`, variables);\r\n        styleContainer.appendChild(createStyleElement(cssText));\r\n    }\r\n\r\n    renderFontTable(fontsPart: FontTablePart, styleContainer: HTMLElement) {\r\n        for (let f of fontsPart.fonts) {\r\n            for (let ref of f.embedFontRefs) {\r\n                this.document.loadFont(ref.id, ref.key).then(fontData => {\r\n                    const cssValues = {\r\n                        'font-family': f.name,\r\n                        'src': `url(${fontData})`\r\n                    };\r\n\r\n                    if (ref.type == \"bold\" || ref.type == \"boldItalic\") {\r\n                        cssValues['font-weight'] = 'bold';\r\n                    }\r\n\r\n                    if (ref.type == \"italic\" || ref.type == \"boldItalic\") {\r\n                        cssValues['font-style'] = 'italic';\r\n                    }\r\n\r\n                    appendComment(styleContainer, `docxjs ${f.name} font`);\r\n                    const cssText = this.styleToString(\"@font-face\", cssValues);\r\n                    styleContainer.appendChild(createStyleElement(cssText));\r\n\t\t\t\t\tthis.refreshTabStops();\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    processStyleName(className: string): string {\r\n        return className ? `${this.className}_${escapeClassName(className)}`: this.className;\r\n    }\r\n\r\n    processStyles(styles: IDomStyle[]) {\r\n        const stylesMap = keyBy(styles.filter(x => x.id != null), x => x.id);\r\n\r\n        for (const style of styles.filter(x => x.basedOn)) {\r\n            var baseStyle = stylesMap[style.basedOn];\r\n\r\n            if (baseStyle) {\r\n                style.paragraphProps = mergeDeep(style.paragraphProps, baseStyle.paragraphProps);\r\n                style.runProps = mergeDeep(style.runProps, baseStyle.runProps);\r\n\r\n                for (const baseValues of baseStyle.styles) {\r\n                    const styleValues = style.styles.find(x => x.target == baseValues.target);\r\n\r\n\t\t\t\t\tif (styleValues) {\r\n                        this.copyStyleProperties(baseValues.values, styleValues.values);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tstyle.styles.push({ ...baseValues, values: { ...baseValues.values } });\r\n                    }\r\n                }\r\n            }\r\n            else if (this.options.debug)\r\n                console.warn(`Can't find base style ${style.basedOn}`);\r\n        }\r\n\r\n        for (let style of styles) {\r\n            style.cssName = this.processStyleName(style.id);\r\n        }\r\n\r\n        return stylesMap;\r\n    }\r\n\r\n    prodessNumberings(numberings: IDomNumbering[]) {\r\n        for (let num of numberings.filter(n => n.pStyleName)) {\r\n            const style = this.findStyle(num.pStyleName);\r\n\r\n            if (style?.paragraphProps?.numbering) {\r\n                style.paragraphProps.numbering.level = num.level;\r\n            }\r\n        }\r\n    }\r\n\r\n    processElement(element: OpenXmlElement) {\r\n        if (element.children) {\r\n            for (var e of element.children) {\r\n                e.parent = element;\r\n\r\n                if (e.type == DomType.Table) {\r\n                    this.processTable(e);\r\n                }\r\n                else {\r\n                    this.processElement(e);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    processTable(table: WmlTable) {\r\n        for (var r of table.children) {\r\n            for (var c of r.children) {\r\n                c.cssStyle = this.copyStyleProperties(table.cellStyle, c.cssStyle, [\r\n                    \"border-left\", \"border-right\", \"border-top\", \"border-bottom\",\r\n                    \"padding-left\", \"padding-right\", \"padding-top\", \"padding-bottom\"\r\n                ]);\r\n\r\n                this.processElement(c);\r\n            }\r\n        }\r\n    }\r\n\r\n    copyStyleProperties(input: Record<string, string>, output: Record<string, string>, attrs: string[] = null): Record<string, string> {\r\n        if (!input)\r\n            return output;\r\n\r\n        if (output == null) output = {};\r\n        if (attrs == null) attrs = Object.getOwnPropertyNames(input);\r\n\r\n        for (var key of attrs) {\r\n            if (input.hasOwnProperty(key) && !output.hasOwnProperty(key))\r\n                output[key] = input[key];\r\n        }\r\n\r\n        return output;\r\n    }\r\n\r\n    createSection(className: string, props: SectionProperties) {\r\n        var elem = this.createElement(\"section\", { className });\r\n\r\n        if (props) {\r\n            if (props.pageMargins) {\r\n                elem.style.paddingLeft = props.pageMargins.left;\r\n                elem.style.paddingRight = props.pageMargins.right;\r\n                elem.style.paddingTop = props.pageMargins.top;\r\n                elem.style.paddingBottom = props.pageMargins.bottom;\r\n            }\r\n\r\n            if (props.pageSize) {\r\n                if (!this.options.ignoreWidth)\r\n                    elem.style.width = props.pageSize.width;\r\n                if (!this.options.ignoreHeight)\r\n                    elem.style.minHeight = props.pageSize.height;\r\n            }\r\n\r\n            if (props.columns && props.columns.numberOfColumns) {\r\n                elem.style.columnCount = `${props.columns.numberOfColumns}`;\r\n                elem.style.columnGap = props.columns.space;\r\n\r\n                if (props.columns.separator) {\r\n                    elem.style.columnRule = \"1px solid black\";\r\n                }\r\n            }\r\n        }\r\n\r\n        return elem;\r\n    }\r\n\r\n    renderSections(document: DocumentElement): HTMLElement[] {\r\n        const result = [];\r\n\r\n        this.processElement(document);\r\n\t\tconst sections = this.splitBySection(document.children);\r\n\t\tlet prevProps = null;\r\n\r\n        for (let i = 0, l = sections.length; i < l; i++) {\r\n            this.currentFootnoteIds = [];\r\n\r\n\t\t\tconst section = sections[i];\r\n            const props = section.sectProps || document.props;\r\n            const sectionElement = this.createSection(this.className, props);\r\n            this.renderStyleValues(document.cssStyle, sectionElement);\r\n\r\n            this.options.renderHeaders && this.renderHeaderFooter(props.headerRefs, props, \r\n\t\t\t\tresult.length, prevProps != props, sectionElement);\r\n\r\n            var contentElement = this.createElement(\"article\");\r\n            this.renderElements(section.elements, contentElement);\r\n            sectionElement.appendChild(contentElement);\r\n\r\n            if (this.options.renderFootnotes) {\r\n                this.renderNotes(this.currentFootnoteIds, this.footnoteMap, sectionElement);\r\n            }\r\n\r\n\t\t\tif (this.options.renderEndnotes && i == l - 1) {\r\n                this.renderNotes(this.currentEndnoteIds, this.endnoteMap, sectionElement);\r\n\t\t\t}\r\n\r\n            this.options.renderFooters && this.renderHeaderFooter(props.footerRefs, props, \r\n\t\t\t\tresult.length, prevProps != props, sectionElement);\r\n\r\n            result.push(sectionElement);\r\n\t\t\tprevProps = props;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderHeaderFooter(refs: FooterHeaderReference[], props: SectionProperties, page: number, firstOfSection: boolean, into: HTMLElement) {\r\n        if (!refs) return;\r\n\r\n        var ref = (props.titlePage && firstOfSection ? refs.find(x => x.type == \"first\") : null)\r\n            ?? (page % 2 == 1 ? refs.find(x => x.type == \"even\") : null)\r\n            ?? refs.find(x => x.type == \"default\");\r\n\r\n        var part = ref && this.document.findPartByRelId(ref.id, this.document.documentPart) as BaseHeaderFooterPart;\r\n\r\n        if (part) {\r\n\t\t\tthis.currentPart = part;\r\n            if (!this.usedHederFooterParts.includes(part.path)) {\r\n                this.processElement(part.rootElement);\r\n                this.usedHederFooterParts.push(part.path);\r\n            }\r\n            this.renderElements([part.rootElement], into);\r\n\t\t\tthis.currentPart = null;\r\n        }\r\n    }\r\n\r\n    isPageBreakElement(elem: OpenXmlElement): boolean {\r\n        if (elem.type != DomType.Break)\r\n            return false;\r\n\r\n        if ((elem as WmlBreak).break == \"lastRenderedPageBreak\")\r\n            return !this.options.ignoreLastRenderedPageBreak;\r\n\r\n        return (elem as WmlBreak).break == \"page\";\r\n    }\r\n\r\n    splitBySection(elements: OpenXmlElement[]): { sectProps: SectionProperties, elements: OpenXmlElement[] }[] {\r\n        var current = { sectProps: null, elements: [] };\r\n        var result = [current];\r\n\r\n        for (let elem of elements) {\r\n            if (elem.type == DomType.Paragraph) {\r\n                const s = this.findStyle((elem as WmlParagraph).styleName);\r\n\r\n                if (s?.paragraphProps?.pageBreakBefore) {\r\n                    current.sectProps = sectProps;\r\n                    current = { sectProps: null, elements: [] };\r\n                    result.push(current);\r\n                }\r\n            }\r\n\r\n            current.elements.push(elem);\r\n\r\n            if (elem.type == DomType.Paragraph) {\r\n                const p = elem as WmlParagraph;\r\n\r\n                var sectProps = p.sectionProps;\r\n                var pBreakIndex = -1;\r\n                var rBreakIndex = -1;\r\n\r\n                if (this.options.breakPages && p.children) {\r\n                    pBreakIndex = p.children.findIndex(r => {\r\n                        rBreakIndex = r.children?.findIndex(this.isPageBreakElement.bind(this)) ?? -1;\r\n                        return rBreakIndex != -1;\r\n                    });\r\n                }\r\n\r\n                if (sectProps || pBreakIndex != -1) {\r\n                    current.sectProps = sectProps;\r\n                    current = { sectProps: null, elements: [] };\r\n                    result.push(current);\r\n                }\r\n\r\n                if (pBreakIndex != -1) {\r\n                    let breakRun = p.children[pBreakIndex];\r\n                    let splitRun = rBreakIndex < breakRun.children.length - 1;\r\n\r\n                    if (pBreakIndex < p.children.length - 1 || splitRun) {\r\n                        var children = elem.children;\r\n                        var newParagraph = { ...elem, children: children.slice(pBreakIndex) };\r\n                        elem.children = children.slice(0, pBreakIndex);\r\n                        current.elements.push(newParagraph);\r\n\r\n                        if (splitRun) {\r\n                            let runChildren = breakRun.children;\r\n                            let newRun = { ...breakRun, children: runChildren.slice(0, rBreakIndex) };\r\n                            elem.children.push(newRun);\r\n                            breakRun.children = runChildren.slice(rBreakIndex);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let currentSectProps = null;\r\n\r\n        for (let i = result.length - 1; i >= 0; i--) {\r\n            if (result[i].sectProps == null) {\r\n                result[i].sectProps = currentSectProps;\r\n            } else {\r\n                currentSectProps = result[i].sectProps\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderWrapper(children: HTMLElement[]) {\r\n        return this.createElement(\"div\", { className: `${this.className}-wrapper` }, children);\r\n    }\r\n\r\n    renderDefaultStyle() {\r\n        var c = this.className;\r\n        var styleText = `\r\n.${c}-wrapper { background: gray; padding: 30px; padding-bottom: 0px; display: flex; flex-flow: column; align-items: center; } \r\n.${c}-wrapper>section.${c} { background: white; box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); margin-bottom: 30px; }\r\n.${c} { color: black; }\r\nsection.${c} { box-sizing: border-box; display: flex; flex-flow: column nowrap; position: relative; overflow: hidden; }\r\nsection.${c}>article { margin-bottom: auto; }\r\n.${c} table { border-collapse: collapse; }\r\n.${c} table td, .${c} table th { vertical-align: top; }\r\n.${c} p { margin: 0pt; min-height: 1em; }\r\n.${c} span { white-space: pre-wrap; overflow-wrap: break-word; }\r\n.${c} a { color: inherit; text-decoration: inherit; }\r\n`;\r\n\r\n        return createStyleElement(styleText);\r\n    }\r\n\r\n    // renderNumbering2(numberingPart: NumberingPartProperties, container: HTMLElement): HTMLElement {\r\n    //     let css = \"\";\r\n    //     const numberingMap = keyBy(numberingPart.abstractNumberings, x => x.id);\r\n    //     const bulletMap = keyBy(numberingPart.bulletPictures, x => x.id);\r\n    //     const topCounters = [];\r\n\r\n    //     for(let num of numberingPart.numberings) {\r\n    //         const absNum = numberingMap[num.abstractId];\r\n\r\n    //         for(let lvl of absNum.levels) {\r\n    //             const className = this.numberingClass(num.id, lvl.level);\r\n    //             let listStyleType = \"none\";\r\n\r\n    //             if(lvl.text && lvl.format == 'decimal') {\r\n    //                 const counter = this.numberingCounter(num.id, lvl.level);\r\n\r\n    //                 if (lvl.level > 0) {\r\n    //                     css += this.styleToString(`p.${this.numberingClass(num.id, lvl.level - 1)}`, {\r\n    //                         \"counter-reset\": counter\r\n    //                     });\r\n    //                 } else {\r\n    //                     topCounters.push(counter);\r\n    //                 }\r\n\r\n    //                 css += this.styleToString(`p.${className}:before`, {\r\n    //                     \"content\": this.levelTextToContent(lvl.text, num.id),\r\n    //                     \"counter-increment\": counter\r\n    //                 });\r\n    //             } else if(lvl.bulletPictureId) {\r\n    //                 let pict = bulletMap[lvl.bulletPictureId];\r\n    //                 let variable = `--${this.className}-${pict.referenceId}`.toLowerCase();\r\n\r\n    //                 css += this.styleToString(`p.${className}:before`, {\r\n    //                     \"content\": \"' '\",\r\n    //                     \"display\": \"inline-block\",\r\n    //                     \"background\": `var(${variable})`\r\n    //                 }, pict.style);\r\n\r\n    //                 this.document.loadNumberingImage(pict.referenceId).then(data => {\r\n    //                     var text = `.${this.className}-wrapper { ${variable}: url(${data}) }`;\r\n    //                     container.appendChild(createStyleElement(text));\r\n    //                 });\r\n    //             } else {\r\n    //                 listStyleType = this.numFormatToCssValue(lvl.format);\r\n    //             }\r\n\r\n    //             css += this.styleToString(`p.${className}`, {\r\n    //                 \"display\": \"list-item\",\r\n    //                 \"list-style-position\": \"inside\",\r\n    //                 \"list-style-type\": listStyleType,\r\n    //                 //TODO\r\n    //                 //...num.style\r\n    //             });\r\n    //         }\r\n    //     }\r\n\r\n    //     if (topCounters.length > 0) {\r\n    //         css += this.styleToString(`.${this.className}-wrapper`, {\r\n    //             \"counter-reset\": topCounters.join(\" \")\r\n    //         });\r\n    //     }\r\n\r\n    //     return createStyleElement(css);\r\n    // }\r\n\r\n    renderNumbering(numberings: IDomNumbering[], styleContainer: HTMLElement) {\r\n        var styleText = \"\";\r\n        var rootCounters = [];\r\n\r\n        for (var num of numberings) {\r\n            var selector = `p.${this.numberingClass(num.id, num.level)}`;\r\n            var listStyleType = \"none\";\r\n\r\n            if (num.bullet) {\r\n                let valiable = `--${this.className}-${num.bullet.src}`.toLowerCase();\r\n\r\n                styleText += this.styleToString(`${selector}:before`, {\r\n                    \"content\": \"' '\",\r\n                    \"display\": \"inline-block\",\r\n                    \"background\": `var(${valiable})`\r\n                }, num.bullet.style);\r\n\r\n                this.document.loadNumberingImage(num.bullet.src).then(data => {\r\n                    var text = `.${this.className}-wrapper { ${valiable}: url(${data}) }`;\r\n                    styleContainer.appendChild(createStyleElement(text));\r\n                });\r\n            }\r\n            else if (num.levelText) {\r\n                let counter = this.numberingCounter(num.id, num.level);\r\n\r\n                if (num.level > 0) {\r\n                    styleText += this.styleToString(`p.${this.numberingClass(num.id, num.level - 1)}`, {\r\n                        \"counter-reset\": counter\r\n                    });\r\n                }\r\n                else {\r\n                    rootCounters.push(counter);\r\n                }\r\n\r\n                styleText += this.styleToString(`${selector}:before`, {\r\n                    \"content\": this.levelTextToContent(num.levelText, num.suff, num.id, this.numFormatToCssValue(num.format)),\r\n                    \"counter-increment\": counter,\r\n                    ...num.rStyle,\r\n                });\r\n            }\r\n            else {\r\n                listStyleType = this.numFormatToCssValue(num.format);\r\n            }\r\n\r\n            styleText += this.styleToString(selector, {\r\n                \"display\": \"list-item\",\r\n                \"list-style-position\": \"inside\",\r\n                \"list-style-type\": listStyleType,\r\n                ...num.pStyle\r\n            });\r\n        }\r\n\r\n        if (rootCounters.length > 0) {\r\n            styleText += this.styleToString(`.${this.className}-wrapper`, {\r\n                \"counter-reset\": rootCounters.join(\" \")\r\n            });\r\n        }\r\n\r\n        return createStyleElement(styleText);\r\n    }\r\n\r\n    renderStyles(styles: IDomStyle[]): HTMLElement {\r\n        var styleText = \"\";\r\n        const stylesMap = this.styleMap;\r\n        const defautStyles = keyBy(styles.filter(s => s.isDefault), s => s.target);\r\n\r\n        for (const style of styles) {\r\n            var subStyles = style.styles;\r\n\r\n            if (style.linked) {\r\n                var linkedStyle = style.linked && stylesMap[style.linked];\r\n\r\n                if (linkedStyle)\r\n                    subStyles = subStyles.concat(linkedStyle.styles);\r\n                else if (this.options.debug)\r\n                    console.warn(`Can't find linked style ${style.linked}`);\r\n            }\r\n\r\n            for (const subStyle of subStyles) {\r\n\t\t\t\t//TODO temporary disable modificators until test it well\r\n                var selector = `${style.target ?? ''}.${style.cssName}`; //${subStyle.mod ?? ''} \r\n\r\n\t\t\t\tif (style.target != subStyle.target)\r\n\t\t\t\t\tselector += ` ${subStyle.target}`;\r\n\r\n                if (defautStyles[style.target] == style)\r\n                    selector = `.${this.className} ${style.target}, ` + selector;\r\n\r\n                styleText += this.styleToString(selector, subStyle.values);\r\n            }\r\n        }\r\n\r\n        return createStyleElement(styleText);\r\n    }\r\n\r\n    renderNotes(noteIds: string[], notesMap: Record<string, WmlBaseNote>, into: HTMLElement) {\r\n        var notes = noteIds.map(id => notesMap[id]).filter(x => x);\r\n\r\n        if (notes.length > 0) {\r\n            var result = this.createElement(\"ol\", null, this.renderElements(notes));\r\n            into.appendChild(result);\r\n        }\r\n    }\r\n\r\n    renderElement(elem: OpenXmlElement): Node {\r\n        switch (elem.type) {\r\n            case DomType.Paragraph:\r\n                return this.renderParagraph(elem as WmlParagraph);\r\n\r\n            case DomType.BookmarkStart:\r\n                return this.renderBookmarkStart(elem as WmlBookmarkStart);\r\n\r\n            case DomType.BookmarkEnd:\r\n                return null; //ignore bookmark end\r\n\r\n            case DomType.Run:\r\n                return this.renderRun(elem as WmlRun);\r\n\r\n            case DomType.Table:\r\n                return this.renderTable(elem);\r\n\r\n            case DomType.Row:\r\n                return this.renderTableRow(elem);\r\n\r\n            case DomType.Cell:\r\n                return this.renderTableCell(elem);\r\n\r\n            case DomType.Hyperlink:\r\n                return this.renderHyperlink(elem);\r\n\r\n            case DomType.Drawing:\r\n                return this.renderDrawing(elem);\r\n\r\n            case DomType.Image:\r\n                return this.renderImage(elem as IDomImage);\r\n\r\n            case DomType.Text:\r\n                return this.renderText(elem as WmlText);\r\n\r\n            case DomType.Tab:\r\n                return this.renderTab(elem);\r\n\r\n            case DomType.Symbol:\r\n                return this.renderSymbol(elem as WmlSymbol);\r\n\r\n            case DomType.Break:\r\n                return this.renderBreak(elem as WmlBreak);\r\n\r\n            case DomType.Footer:\r\n                return this.renderContainer(elem, \"footer\");\r\n\r\n            case DomType.Header:\r\n                return this.renderContainer(elem, \"header\");\r\n\r\n            case DomType.Footnote:\r\n\t\t\tcase DomType.Endnote:\r\n\t\t\t\treturn this.renderContainer(elem, \"li\");\r\n\r\n            case DomType.FootnoteReference:\r\n                return this.renderFootnoteReference(elem as WmlNoteReference);\r\n\r\n\t\t\tcase DomType.EndnoteReference:\r\n\t\t\t\treturn this.renderEndnoteReference(elem as WmlNoteReference);\r\n\t\r\n\t\t\tcase DomType.NoBreakHyphen:\r\n                return this.createElement(\"wbr\");\r\n\t\t}\r\n\r\n        return null;\r\n    }\r\n\r\n    renderChildren(elem: OpenXmlElement, into?: HTMLElement): Node[] {\r\n        return this.renderElements(elem.children, into);\r\n    }\r\n\r\n    renderElements(elems: OpenXmlElement[], into?: HTMLElement): Node[] {\r\n        if (elems == null)\r\n            return null;\r\n\r\n        var result = elems.map(e => this.renderElement(e)).filter(e => e != null);\r\n\r\n        if (into)\r\n\t\t\tappendChildren(into, result);\r\n\r\n        return result;\r\n    }\r\n\r\n    renderContainer(elem: OpenXmlElement, tagName: keyof HTMLElementTagNameMap) {\r\n        return this.createElement(tagName, null, this.renderChildren(elem));\r\n    }\r\n\r\n    renderParagraph(elem: WmlParagraph) {\r\n        var result = this.createElement(\"p\");\r\n\r\n        const style = this.findStyle(elem.styleName);\r\n\t\telem.tabs ??= style?.paragraphProps?.tabs;  //TODO\r\n\r\n        this.renderClass(elem, result);\r\n        this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n        this.renderCommonProperties(result.style, elem);\r\n\r\n        const numbering = elem.numbering ?? style?.paragraphProps?.numbering;\r\n\r\n        if (numbering) {\r\n            result.classList.add(this.numberingClass(numbering.id, numbering.level));\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderRunProperties(style: any, props: RunProperties) {\r\n        this.renderCommonProperties(style, props);\r\n    }\r\n\r\n    renderCommonProperties(style: any, props: CommonProperties) {\r\n        if (props == null)\r\n            return;\r\n\r\n        if (props.color) {\r\n            style[\"color\"] = props.color;\r\n        }\r\n\r\n        if (props.fontSize) {\r\n            style[\"font-size\"] = props.fontSize;\r\n        }\r\n    }\r\n\r\n    renderHyperlink(elem: WmlHyperlink) {\r\n        var result = this.createElement(\"a\");\r\n\r\n        this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        if (elem.href)\r\n            result.href = elem.href\r\n\r\n        return result;\r\n    }\r\n\r\n    renderDrawing(elem: OpenXmlElement) {\r\n        var result = this.createElement(\"div\");\r\n\r\n        result.style.display = \"inline-block\";\r\n        result.style.position = \"relative\";\r\n        result.style.textIndent = \"0px\";\r\n\r\n        this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        return result;\r\n    }\r\n\r\n    renderImage(elem: IDomImage) {\r\n        let result = this.createElement(\"img\");\r\n\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        if (this.document) {\r\n            this.document.loadDocumentImage(elem.src, this.currentPart).then(x => {\r\n                result.src = x;\r\n            });\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderText(elem: WmlText) {\r\n        return this.htmlDocument.createTextNode(elem.text);\r\n    }\r\n\r\n    renderBreak(elem: WmlBreak) {\r\n        if (elem.break == \"textWrapping\") {\r\n            return this.createElement(\"br\");\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    renderSymbol(elem: WmlSymbol) {\r\n        var span = this.createElement(\"span\");\r\n        span.style.fontFamily = elem.font;\r\n        span.innerHTML = `&#x${elem.char};`\r\n        return span;\r\n    }\r\n\r\n    renderFootnoteReference(elem: WmlNoteReference) {\r\n        var result = this.createElement(\"sup\");\r\n        this.currentFootnoteIds.push(elem.id);\r\n        result.textContent = `${this.currentFootnoteIds.length}`;\r\n        return result;\r\n    }\r\n\r\n\trenderEndnoteReference(elem: WmlNoteReference) {\r\n        var result = this.createElement(\"sup\");\r\n        this.currentEndnoteIds.push(elem.id);\r\n        result.textContent = `${this.currentEndnoteIds.length}`;\r\n        return result;\r\n    }\r\n\r\n    renderTab(elem: OpenXmlElement) {\r\n        var tabSpan = this.createElement(\"span\");\r\n\r\n        tabSpan.innerHTML = \"&emsp;\";//\"&nbsp;\";\r\n\r\n        if (this.options.experimental) {\r\n\t\t\ttabSpan.className = this.tabStopClass();\r\n\t\t\tvar stops = findParent<WmlParagraph>(elem, DomType.Paragraph)?.tabs;\r\n\t\t\tthis.currentTabs.push({ stops, span: tabSpan });\r\n        }\r\n\r\n        return tabSpan;\r\n    }\r\n\r\n    renderBookmarkStart(elem: WmlBookmarkStart): HTMLElement {\r\n        var result = this.createElement(\"span\");\r\n        result.id = elem.name;\r\n        return result;\r\n    }\r\n\r\n    renderRun(elem: WmlRun) {\r\n\t\tif (elem.fieldRun)\r\n\t\t\treturn null;\r\n\r\n        const result = this.createElement(\"span\");\r\n\r\n        if (elem.id)\r\n            result.id = elem.id;\r\n\r\n        this.renderClass(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n\t\tif (elem.verticalAlign) {\r\n\t\t\tconst wrapper = this.createElement(elem.verticalAlign as any);\r\n\t\t\tthis.renderChildren(elem, wrapper);\r\n\t\t\tresult.appendChild(wrapper);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.renderChildren(elem, result);\r\n\t\t}\r\n\r\n        return result;\r\n    }\r\n\r\n    renderTable(elem: WmlTable) {\r\n        let result = this.createElement(\"table\");\r\n\r\n\t\tthis.tableCellPositions.push(this.currentCellPosition);\t\r\n\t\tthis.tableVerticalMerges.push(this.currentVerticalMerge);\r\n\t\tthis.currentVerticalMerge = {};\t\r\n\t\tthis.currentCellPosition = { col: 0, row: 0};\r\n\r\n        if (elem.columns)\r\n            result.appendChild(this.renderTableColumns(elem.columns));\r\n\r\n        this.renderClass(elem, result);\r\n        this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n\t\tthis.currentVerticalMerge = this.tableVerticalMerges.pop();\r\n\t\tthis.currentCellPosition = this.tableCellPositions.pop();\r\n\r\n        return result;\r\n    }\r\n\r\n    renderTableColumns(columns: WmlTableColumn[]) {\r\n        let result = this.createElement(\"colgroup\");\r\n\r\n        for (let col of columns) {\r\n            let colElem = this.createElement(\"col\");\r\n\r\n            if (col.width)\r\n                colElem.style.width = col.width;\r\n\r\n            result.appendChild(colElem);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderTableRow(elem: OpenXmlElement) {\r\n        let result = this.createElement(\"tr\");\r\n\r\n\t\tthis.currentCellPosition.col = 0;\r\n\r\n        this.renderClass(elem, result);\r\n        this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n\t\tthis.currentCellPosition.row ++;\r\n\r\n        return result;\r\n    }\r\n\r\n    renderTableCell(elem: WmlTableCell) {\r\n        let result = this.createElement(\"td\");\r\n\r\n\t\tif (elem.verticalMerge) {\r\n\t\t\tconst key = this.currentCellPosition.col;\r\n\r\n\t\t\tif (elem.verticalMerge == \"restart\") {\r\n\t\t\t\tthis.currentVerticalMerge[key] = result;\r\n\t\t\t\tresult.rowSpan = 1;\r\n\t\t\t} else if(this.currentVerticalMerge[key]) {\r\n\t\t\t\tthis.currentVerticalMerge[key].rowSpan += 1;\r\n\t\t\t\tresult.style.display = \"none\";\r\n\t\t\t} \r\n\t\t}\r\n\r\n        this.renderClass(elem, result);\r\n        this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        if (elem.span) \r\n\t\t\tresult.colSpan = elem.span;\r\n\r\n\t\tthis.currentCellPosition.col ++;\r\n\r\n        return result;\r\n    }\r\n\r\n    renderStyleValues(style: Record<string, string>, ouput: HTMLElement) {\r\n\t\tObject.assign(ouput.style, style);\r\n    }\r\n\r\n\trenderClass(input: OpenXmlElement, ouput: HTMLElement) {\r\n\t\tif (input.className) \r\n\t\t\touput.className = input.className;\r\n\t\t\r\n\t\tif (input.styleName)\r\n\t\t\touput.classList.add(this.processStyleName(input.styleName));\r\n\t}\r\n\r\n\tfindStyle(styleName: string) {\r\n\t\treturn styleName && this.styleMap?.[styleName];\r\n\t}\r\n\r\n    numberingClass(id: string, lvl: number) {\r\n        return `${this.className}-num-${id}-${lvl}`;\r\n    }\r\n\r\n\ttabStopClass() {\r\n        return `${this.className}-tab-stop`;\r\n\t}\r\n\r\n    styleToString(selectors: string, values: Record<string, string>, cssText: string = null) {\r\n        let result = `${selectors} {\\r\\n`;\r\n\r\n        for (const key in values) {\r\n            result += `  ${key}: ${values[key]};\\r\\n`;\r\n        }\r\n\r\n        if (cssText)\r\n            result += cssText;\r\n\r\n        return result + \"}\\r\\n\";\r\n    }\r\n\r\n    numberingCounter(id: string, lvl: number) {\r\n        return `${this.className}-num-${id}-${lvl}`;\r\n    }\r\n\r\n    levelTextToContent(text: string, suff: string, id: string, numformat: string) {\r\n        const suffMap = {\r\n            \"tab\": \"\\\\9\",\r\n            \"space\": \"\\\\a0\",\r\n        };\r\n\r\n        var result = text.replace(/%\\d*/g, s => {\r\n            let lvl = parseInt(s.substring(1), 10) - 1;\r\n            return `\"counter(${this.numberingCounter(id, lvl)}, ${numformat})\"`;\r\n        });\r\n\r\n        return `\"${result}${suffMap[suff] ?? \"\"}\"`;\r\n    }\r\n\r\n    numFormatToCssValue(format: string) {\r\n        var mapping = {\r\n            \"none\": \"none\",\r\n            \"bullet\": \"disc\",\r\n            \"decimal\": \"decimal\",\r\n            \"lowerLetter\": \"lower-alpha\",\r\n            \"upperLetter\": \"upper-alpha\",\r\n            \"lowerRoman\": \"lower-roman\",\r\n            \"upperRoman\": \"upper-roman\",\r\n        };\r\n\r\n        return mapping[format] || format;\r\n    }\r\n\r\n\trefreshTabStops() {\r\n\t\tif (!this.options.experimental) \r\n\t\t\treturn;\r\n\r\n\t\tclearTimeout(this.tabsTimeout);\r\n\r\n\t\tthis.tabsTimeout = setTimeout(() => {\r\n\t\t\tconst pixelToPoint = computePixelToPoint();\r\n\r\n\t\t\tfor (let tab of this.currentTabs) {\r\n\t\t\t\tupdateTabStop(tab.span, tab.stops, this.defaultTabSize, pixelToPoint);\r\n\t\t\t}\r\n\t\t}, 500);\r\n\t}\r\n\r\n    createElement = createElement;\r\n}\r\n\r\nfunction createElement<T extends keyof HTMLElementTagNameMap>(\r\n    tagName: T,\r\n    props: Partial<Record<keyof HTMLElementTagNameMap[T], any>> = undefined,\r\n    children: Node[] = undefined\r\n): HTMLElementTagNameMap[T] {\r\n    var result = Object.assign(document.createElement(tagName), props);\r\n    children && appendChildren(result, children);\r\n    return result;\r\n}\r\n\r\nfunction removeAllElements(elem: HTMLElement) {\r\n    elem.innerHTML = '';\r\n}\r\n\r\nfunction appendChildren(elem: HTMLElement, children: Node[]) {\r\n    children.forEach(c => elem.appendChild(c));\r\n}\r\n\r\nfunction createStyleElement(cssText: string) {\r\n    return createElement(\"style\", { innerHTML: cssText });\r\n}\r\n\r\nfunction appendComment(elem: HTMLElement, comment: string) {\r\n    elem.appendChild(document.createComment(comment));\r\n}\r\n\r\nfunction findParent<T extends OpenXmlElement>(elem: OpenXmlElement, type: DomType): T {\r\n    var parent = elem.parent;\r\n\r\n    while (parent != null && parent.type != type)\r\n        parent = parent.parent;\r\n\r\n    return <T>parent;\r\n}","import { Length } from \"./document/common\";\r\nimport { ParagraphTab } from \"./document/paragraph\";\r\n\r\ninterface TabStop {\r\n\tpos: number;\r\n\tleader: string;\r\n\tstyle: string;\r\n}\r\n\r\nconst defaultTab: TabStop = { pos: 0, leader: \"none\", style: \"left\" };\r\nconst maxTabs = 50;\r\n\r\nexport function computePixelToPoint(container: HTMLElement = document.body) {\r\n\tconst temp = document.createElement(\"div\");\r\n\ttemp.style.width = '100pt';\r\n\t\r\n\tcontainer.appendChild(temp);\r\n\tconst result = 100 / temp.offsetWidth;\r\n\tcontainer.removeChild(temp);\r\n\r\n\treturn result\r\n}\r\n\r\nexport function updateTabStop(elem: HTMLElement, tabs: ParagraphTab[], defaultTabSize: Length, pixelToPoint: number = 72 / 96) {\r\n    const p = elem.closest(\"p\");\r\n\r\n    const ebb = elem.getBoundingClientRect();\r\n    const pbb = p.getBoundingClientRect();\r\n    const pcs = getComputedStyle(p);\r\n\r\n\tconst tabStops = tabs?.length > 0 ? tabs.map(t => ({\r\n\t\tpos: lengthToPoint(t.position),\r\n\t\tleader: t.leader,\r\n\t\tstyle: t.style\r\n\t})).sort((a, b) => a.pos - b.pos) : [defaultTab];\r\n\r\n\tconst lastTab = tabStops[tabStops.length - 1];\r\n\tconst pWidthPt = pbb.width * pixelToPoint;\r\n\tconst size = lengthToPoint(defaultTabSize);\r\n    let pos = lastTab.pos + size;\r\n\r\n    if (pos < pWidthPt) {\r\n        for (; pos < pWidthPt && tabStops.length < maxTabs; pos += size) {\r\n            tabStops.push({ ...defaultTab, pos: pos });\r\n        }\r\n    }\r\n\r\n    const marginLeft = parseFloat(pcs.marginLeft);\r\n    const pOffset = pbb.left + marginLeft;\r\n    const left = (ebb.left - pOffset) * pixelToPoint;\r\n    const tab = tabStops.find(t => t.style != \"clear\" && t.pos > left);\r\n\r\n    if(tab == null)\r\n        return;\r\n\r\n    let width: number = 1;\r\n\r\n    if (tab.style == \"right\" || tab.style == \"center\") {\r\n\t\tconst tabStops = Array.from(p.querySelectorAll(`.${elem.className}`));\r\n\t\tconst nextIdx = tabStops.indexOf(elem) + 1;\r\n        const range = document.createRange();\r\n        range.setStart(elem, 1);\r\n\r\n\t\tif (nextIdx < tabStops.length) {\r\n\t\t\trange.setEndBefore(tabStops[nextIdx]);\r\n\t\t} else {\r\n\t\t\trange.setEndAfter(p);\r\n\t\t}\r\n\r\n\t\tconst mul = tab.style == \"center\" ? 0.5 : 1;\r\n        const nextBB = range.getBoundingClientRect();\r\n\t\tconst offset = nextBB.left + mul * nextBB.width - (pbb.left - marginLeft);\r\n\r\n\t\twidth = tab.pos - offset * pixelToPoint;\r\n    } else {\r\n        width = tab.pos - left;\r\n    }\r\n\r\n    elem.innerHTML = \"&nbsp;\";\r\n    elem.style.textDecoration = \"inherit\";\r\n    elem.style.wordSpacing = `${width.toFixed(0)}pt`;\r\n\r\n    switch (tab.leader) {\r\n        case \"dot\":\r\n        case \"middleDot\":\r\n            elem.style.textDecoration = \"underline\";\r\n            elem.style.textDecorationStyle = \"dotted\";\r\n            break;\r\n\r\n        case \"hyphen\":\r\n        case \"heavy\":\r\n        case \"underscore\":\r\n            elem.style.textDecoration = \"underline\";\r\n            break;\r\n    }\r\n}\r\n\r\nfunction lengthToPoint(length: Length): number {\r\n\treturn parseFloat(length);\r\n}","import { DomType, OpenXmlElement } from \"../document/dom\";\r\n\r\nexport abstract class WmlBaseNote implements OpenXmlElement {\r\n    id: string;\r\n\ttype: DomType;\r\n\tnoteType: string;\r\n    children?: OpenXmlElement[] = [];\r\n    cssStyle?: Record<string, string> = {};\r\n    className?: string;\r\n    parent?: OpenXmlElement;\r\n}\r\n\r\nexport class WmlFootnote extends WmlBaseNote {\r\n\ttype = DomType.Footnote\r\n}\r\n\r\nexport class WmlEndnote extends WmlBaseNote {\r\n\ttype = DomType.Endnote\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { WmlBaseNote, WmlEndnote, WmlFootnote } from \"./elements\";\r\n\r\nexport class BaseNotePart<T extends WmlBaseNote> extends Part {\r\n    protected _documentParser: DocumentParser;\r\n\r\n    notes: T[]\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n}\r\n\r\nexport class FootnotesPart extends BaseNotePart<WmlFootnote> {\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path, parser);\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.notes = this._documentParser.parseNotes(root, \"footnote\", WmlFootnote);\r\n    }\r\n}\r\n\r\nexport class EndnotesPart extends BaseNotePart<WmlEndnote> {\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path, parser);\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.notes = this._documentParser.parseNotes(root, \"endnote\", WmlEndnote);\r\n    }\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { IDomNumbering } from \"../document/dom\";\r\nimport { AbstractNumbering, Numbering, NumberingBulletPicture, NumberingPartProperties, parseNumberingPart } from \"./numbering\";\r\n\r\nexport class NumberingPart extends Part implements NumberingPartProperties {\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n\r\n    numberings: Numbering[];\r\n    abstractNumberings: AbstractNumbering[];\r\n    bulletPictures: NumberingBulletPicture[];\r\n    \r\n    domNumberings: IDomNumbering[];\r\n\r\n    parseXml(root: Element) {\r\n        Object.assign(this, parseNumberingPart(root, this._package.xmlParser));\r\n        this.domNumberings = this._documentParser.parseNumberingFile(root);  \r\n    }\r\n}","import { NumberingPicBullet } from \"../document/dom\";\r\nimport { ParagraphProperties, parseParagraphProperties } from \"../document/paragraph\";\r\nimport { parseRunProperties, RunProperties } from \"../document/run\";\r\nimport { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface NumberingPartProperties {\r\n    numberings: Numbering[];\r\n    abstractNumberings: AbstractNumbering[];\r\n    bulletPictures: NumberingBulletPicture[];\r\n}\r\n\r\nexport interface Numbering {\r\n    id: string;\r\n    abstractId: string;\r\n    overrides: NumberingLevelOverride[];\r\n}\r\n\r\nexport interface NumberingLevelOverride {\r\n    level: number;\r\n    start: number;\r\n    numberingLevel: NumberingLevel;\r\n}\r\n\r\nexport interface AbstractNumbering {\r\n    id: string;\r\n    name: string;\r\n    multiLevelType: \"singleLevel\" | \"multiLevel\" | \"hybridMultilevel\" | string;\r\n    levels: NumberingLevel[];\r\n    numberingStyleLink: string;\r\n    styleLink: string;\r\n}\r\n\r\nexport interface NumberingLevel {\r\n    level: number;\r\n    start: string;\r\n    restart: number;\r\n    format: 'lowerRoman' | 'lowerLetter' | string;\r\n    text: string;\r\n    justification: string;\r\n    bulletPictureId: string;\r\n    paragraphStyle: string;\r\n    paragraphProps: ParagraphProperties;\r\n    runProps: RunProperties;\r\n}\r\n\r\nexport interface NumberingBulletPicture {\r\n    id: string;\r\n    referenceId: string;\r\n    style: string;\r\n}\r\n\r\nexport function parseNumberingPart(elem: Element, xml: XmlParser): NumberingPartProperties {\r\n    let result: NumberingPartProperties = {\r\n        numberings: [],\r\n        abstractNumberings: [],\r\n        bulletPictures: []\r\n    }\r\n    \r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"num\":\r\n                result.numberings.push(parseNumbering(e, xml));\r\n                break;\r\n            case \"abstractNum\":\r\n                result.abstractNumberings.push(parseAbstractNumbering(e, xml));\r\n                break;\r\n            case \"numPicBullet\":\r\n                result.bulletPictures.push(parseNumberingBulletPicture(e, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumbering(elem: Element, xml: XmlParser): Numbering {\r\n    let result = <Numbering>{\r\n        id: xml.attr(elem, 'numId'),\r\n        overrides: []\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"abstractNumId\":\r\n                result.abstractId = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlOverride\":\r\n                result.overrides.push(parseNumberingLevelOverrride(e, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseAbstractNumbering(elem: Element, xml: XmlParser): AbstractNumbering {\r\n    let result = <AbstractNumbering>{\r\n        id: xml.attr(elem, 'abstractNumId'),\r\n        levels: []\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"name\":\r\n                result.name = xml.attr(e, \"val\");\r\n                break;\r\n            case \"multiLevelType\":\r\n                result.multiLevelType = xml.attr(e, \"val\");\r\n                break;\r\n            case \"numStyleLink\":\r\n                result.numberingStyleLink = xml.attr(e, \"val\");\r\n                break;\r\n            case \"styleLink\":\r\n                result.styleLink = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvl\":\r\n                result.levels.push(parseNumberingLevel(e, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumberingLevel(elem: Element, xml: XmlParser): NumberingLevel {\r\n    let result = <NumberingLevel>{\r\n        level: xml.intAttr(elem, 'ilvl')\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"start\":\r\n                result.start = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlRestart\":\r\n                result.restart = xml.intAttr(e, \"val\");\r\n                break;\r\n            case \"numFmt\":\r\n                result.format = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlText\":\r\n                result.text = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlJc\":\r\n                result.justification = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlPicBulletId\":\r\n                result.bulletPictureId = xml.attr(e, \"val\");\r\n                break;\r\n            case \"pStyle\":\r\n                result.paragraphStyle = xml.attr(e, \"val\");\r\n                break;\r\n            case \"pPr\":\r\n                result.paragraphProps = parseParagraphProperties(e, xml);\r\n                break;\r\n            case \"rPr\":\r\n                result.runProps = parseRunProperties(e, xml);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumberingLevelOverrride(elem: Element, xml: XmlParser): NumberingLevelOverride {\r\n    let result = <NumberingLevelOverride>{\r\n        level: xml.intAttr(elem, 'ilvl')\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"startOverride\":\r\n                result.start = xml.intAttr(e, \"val\");\r\n                break;\r\n            case \"lvl\":\r\n                result.numberingLevel = parseNumberingLevel(e, xml);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumberingBulletPicture(elem: Element, xml: XmlParser): NumberingBulletPicture {\r\n    //TODO\r\n    var pict = xml.element(elem, \"pict\");\r\n    var shape = pict && xml.element(pict, \"shape\");\r\n    var imagedata = shape && xml.element(shape, \"imagedata\");\r\n\r\n    return imagedata ? {\r\n        id: xml.attr(elem, \"numPicBulletId\"),\r\n        referenceId: xml.attr(imagedata, \"id\"),\r\n        style: xml.attr(shape, \"style\")\r\n    } : null;\r\n}","import { Length,  LengthUsage, LengthUsageType, convertLength, convertBoolean  } from \"../document/common\";\r\n\r\nexport function parseXmlString(xmlString: string, trimXmlDeclaration: boolean = false): Document {\r\n    if (trimXmlDeclaration)\r\n        xmlString = xmlString.replace(/<[?].*[?]>/, \"\");\r\n    \r\n    const result = new DOMParser().parseFromString(xmlString, \"application/xml\");  \r\n    const errorText = hasXmlParserError(result);\r\n\r\n    if (errorText)\r\n        throw new Error(errorText);\r\n\r\n    return result;\r\n}\r\n\r\nfunction hasXmlParserError(doc: Document) {\r\n    return doc.getElementsByTagName(\"parsererror\")[0]?.textContent;\r\n}\r\n\r\nexport function serializeXmlString(elem: Node): string {\r\n    return new XMLSerializer().serializeToString(elem);\r\n}\r\n\r\nexport class XmlParser {\r\n    elements(elem: Element, localName: string = null): Element[] {\r\n        const result = [];\r\n\r\n        for (let i = 0, l = elem.childNodes.length; i < l; i++) {\r\n            let c = elem.childNodes.item(i);\r\n\r\n            if (c.nodeType == 1 && (localName == null || (c as Element).localName == localName))\r\n                result.push(c);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    element(elem: Element, localName: string): Element {\r\n        for (let i = 0, l = elem.childNodes.length; i < l; i++) {\r\n            let c = elem.childNodes.item(i);\r\n\r\n            if (c.nodeType == 1 && (c as Element).localName == localName)\r\n                return c as Element;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    elementAttr(elem: Element, localName: string, attrLocalName: string): string {\r\n        var el = this.element(elem, localName);\r\n        return el ? this.attr(el, attrLocalName) : undefined;\r\n    }\r\n\r\n    attr(elem: Element, localName: string): string {\r\n        for (let i = 0, l = elem.attributes.length; i < l; i++) {\r\n            let a = elem.attributes.item(i);\r\n\r\n            if (a.localName == localName)\r\n                return a.value;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    intAttr(node: Element, attrName: string, defaultValue: number = null): number {\r\n        var val = this.attr(node, attrName);\r\n        return val ? parseInt(val) : defaultValue;\r\n    }\r\n\r\n\thexAttr(node: Element, attrName: string, defaultValue: number = null): number {\r\n        var val = this.attr(node, attrName);\r\n        return val ? parseInt(val, 16) : defaultValue;\r\n    }\r\n\r\n    floatAttr(node: Element, attrName: string, defaultValue: number = null): number {\r\n        var val = this.attr(node, attrName);\r\n        return val ? parseFloat(val) : defaultValue;\r\n    }\r\n\r\n    boolAttr(node: Element, attrName: string, defaultValue: boolean = null) {\r\n        return convertBoolean(this.attr(node, attrName), defaultValue);\r\n    }\r\n\r\n    lengthAttr(node: Element, attrName: string, usage: LengthUsageType = LengthUsage.Dxa): Length {\r\n        return convertLength(this.attr(node, attrName), usage);\r\n    }\r\n}\r\n\r\nconst globalXmlParser = new XmlParser();\r\n\r\nexport default globalXmlParser;","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { WmlSettings, parseSettings } from \"./settings\";\r\n\r\nexport class SettingsPart extends Part {\r\n\tsettings: WmlSettings;\r\n\r\n\tconstructor(pkg: OpenXmlPackage, path: string) {\r\n\t\tsuper(pkg, path);\r\n\t}\r\n\r\n\tparseXml(root: Element) {\r\n\t\tthis.settings = parseSettings(root, this._package.xmlParser);\r\n\t}\r\n}","import { DocumentParser } from \"../document-parser\";\r\nimport { Length } from \"../document/common\";\r\nimport { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface WmlSettings {\r\n\tdefaultTabStop: Length;\r\n\tfootnoteProps: NoteProperties;\r\n\tendnoteProps: NoteProperties;\r\n\tautoHyphenation: boolean;\r\n}\r\n\r\nexport interface NoteProperties {\r\n\tnummeringFormat: string;\r\n\tdefaultNoteIds: string[];\r\n}\r\n\r\nexport function parseSettings(elem: Element, xml: XmlParser) {\r\n\tvar result = {} as WmlSettings; \r\n\r\n\tfor (let el of xml.elements(elem)) {\r\n\t\tswitch(el.localName) {\r\n\t\t\tcase \"defaultTabStop\": result.defaultTabStop = xml.lengthAttr(el, \"val\"); break;\r\n\t\t\tcase \"footnotePr\": result.footnoteProps = parseNoteProperties(el, xml); break;\r\n\t\t\tcase \"endnotePr\": result.endnoteProps = parseNoteProperties(el, xml); break;\r\n\t\t\tcase \"autoHyphenation\": result.autoHyphenation = xml.boolAttr(el, \"val\"); break;\r\n\t\t}\r\n\t}\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNoteProperties(elem: Element, xml: XmlParser) {\r\n\tvar result = {\r\n\t\tdefaultNoteIds: []\r\n\t} as NoteProperties; \r\n\r\n\tfor (let el of xml.elements(elem)) {\r\n\t\tswitch(el.localName) {\r\n\t\t\tcase \"numFmt\": \r\n\t\t\t\tresult.nummeringFormat = xml.attr(el, \"val\");\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"footnote\": \r\n\t\t\tcase \"endnote\": \r\n\t\t\t\tresult.defaultNoteIds.push(xml.attr(el, \"id\"));\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n    return result;\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { IDomStyle } from \"../document/style\";\r\n\r\nexport class StylesPart extends Part {\r\n    styles: IDomStyle[];\r\n\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.styles = this._documentParser.parseStylesFile(root);     \r\n    }\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DmlTheme, parseTheme } from \"./theme\";\r\n\r\nexport class ThemePart extends Part {\r\n    theme: DmlTheme;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string) {\r\n        super(pkg, path);\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.theme = parseTheme(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport class DmlTheme {\r\n    colorScheme: DmlColorScheme;\r\n    fontScheme: DmlFontScheme;\r\n}\r\n\r\nexport interface DmlColorScheme {\r\n    name: string;\r\n    colors: Record<string, string>;\r\n}\r\n\r\nexport interface DmlFontScheme {\r\n    name: string;\r\n    majorFont: DmlFormInfo,\r\n    minorFont: DmlFormInfo\r\n}\r\n\r\nexport interface DmlFormInfo {\r\n    latinTypeface: string;\r\n    eaTypeface: string;\r\n    csTypeface: string;\r\n}\r\n\r\nexport function parseTheme(elem: Element, xml: XmlParser) {\r\n    var result = new DmlTheme();\r\n    var themeElements = xml.element(elem, \"themeElements\");\r\n\r\n    for (let el of xml.elements(themeElements)) {\r\n        switch(el.localName) {\r\n            case \"clrScheme\": result.colorScheme = parseColorScheme(el, xml); break;\r\n            case \"fontScheme\": result.fontScheme = parseFontScheme(el, xml); break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseColorScheme(elem: Element, xml: XmlParser) {\r\n    var result: DmlColorScheme = { \r\n        name: xml.attr(elem, \"name\"),\r\n        colors: {}\r\n    };\r\n\r\n    for (let el of xml.elements(elem)) {\r\n        var srgbClr = xml.element(el, \"srgbClr\");\r\n        var sysClr = xml.element(el, \"sysClr\");\r\n\r\n        if (srgbClr) {\r\n            result.colors[el.localName] = xml.attr(srgbClr, \"val\");\r\n        }\r\n        else if (sysClr) {\r\n            result.colors[el.localName] = xml.attr(sysClr, \"lastClr\");\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseFontScheme(elem: Element, xml: XmlParser) {\r\n    var result: DmlFontScheme = { \r\n        name: xml.attr(elem, \"name\"),\r\n    } as DmlFontScheme;\r\n\r\n    for (let el of xml.elements(elem)) {\r\n        switch (el.localName) {\r\n            case \"majorFont\": result.majorFont = parseFontInfo(el, xml); break;\r\n            case \"minorFont\": result.minorFont = parseFontInfo(el, xml); break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseFontInfo(elem: Element, xml: XmlParser): DmlFormInfo {\r\n    return {\r\n        latinTypeface: xml.elementAttr(elem, \"latin\", \"typeface\"),\r\n        eaTypeface: xml.elementAttr(elem, \"ea\", \"typeface\"),\r\n        csTypeface: xml.elementAttr(elem, \"cs\", \"typeface\"),\r\n    };\r\n}","export function escapeClassName(className: string) {\r\n\treturn className?.replace(/[ .]+/g, '-').replace(/[&]+/g, 'and').toLowerCase();\r\n}\r\n\r\nexport function splitPath(path: string): [string, string] {\r\n    let si = path.lastIndexOf('/') + 1;\r\n    let folder = si == 0 ? \"\" : path.substring(0, si);\r\n    let fileName = si == 0 ? path : path.substring(si);\r\n\r\n    return [folder, fileName];\r\n}\r\n\r\nexport function resolvePath(path: string, base: string): string {\r\n    try {\r\n        const prefix = \"http://docx/\";\r\n        const url = new URL(path, prefix + base).toString();\r\n        return url.substring(prefix.length);\r\n    } catch {\r\n        return `${base}${path}`;\r\n    }\r\n}\r\n\r\nexport function keyBy<T = any>(array: T[], by: (x: T) => any): Record<any, T> {\r\n    return array.reduce((a, x) => {\r\n        a[by(x)] = x;\r\n        return a;\r\n    }, {});\r\n}\r\n\r\nexport function blobToBase64(blob: Blob): any {\r\n\treturn new Promise((resolve, _) => {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.onloadend = () => resolve(reader.result);\r\n\t\treader.readAsDataURL(blob);\r\n\t});\r\n}\r\n\r\nexport function isObject(item) {\r\n    return (item && typeof item === 'object' && !Array.isArray(item));\r\n}\r\n\r\nexport function mergeDeep(target, ...sources) {\r\n    if (!sources.length) \r\n        return target;\r\n    \r\n    const source = sources.shift();\r\n\r\n    if (isObject(target) && isObject(source)) {\r\n        for (const key in source) {\r\n            if (isObject(source[key])) {\r\n                const val = target[key] ?? (target[key] = {});\r\n                mergeDeep(val, source[key]);\r\n            } else {\r\n                target[key] = source[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    return mergeDeep(target, ...sources);\r\n}","import { OutputType } from \"jszip\";\r\n\r\nimport { DocumentParser } from './document-parser';\r\nimport { Relationship, RelationshipTypes } from './common/relationship';\r\nimport { Part } from './common/part';\r\nimport { FontTablePart } from './font-table/font-table';\r\nimport { OpenXmlPackage } from './common/open-xml-package';\r\nimport { DocumentPart } from './document/document-part';\r\nimport { blobToBase64, resolvePath, splitPath } from './utils';\r\nimport { NumberingPart } from './numbering/numbering-part';\r\nimport { StylesPart } from './styles/styles-part';\r\nimport { FooterPart, HeaderPart } from \"./header-footer/parts\";\r\nimport { ExtendedPropsPart } from \"./document-props/extended-props-part\";\r\nimport { CorePropsPart } from \"./document-props/core-props-part\";\r\nimport { ThemePart } from \"./theme/theme-part\";\r\nimport { EndnotesPart, FootnotesPart } from \"./notes/parts\";\r\nimport { SettingsPart } from \"./settings/settings-part\";\r\nimport { CustomPropsPart } from \"./document-props/custom-props-part\";\r\n\r\nconst topLevelRels = [\r\n\t{ type: RelationshipTypes.OfficeDocument, target: \"word/document.xml\" },\r\n\t{ type: RelationshipTypes.ExtendedProperties, target: \"docProps/app.xml\" },\r\n\t{ type: RelationshipTypes.CoreProperties, target: \"docProps/core.xml\" },\r\n\t{ type: RelationshipTypes.CustomProperties, target: \"docProps/custom.xml\" },\r\n];\r\n\r\nexport class WordDocument {\r\n\tprivate _package: OpenXmlPackage;\r\n\tprivate _parser: DocumentParser;\r\n\tprivate _options: any;\r\n\r\n\trels: Relationship[];\r\n\tparts: Part[] = [];\r\n\tpartsMap: Record<string, Part> = {};\r\n\r\n\tdocumentPart: DocumentPart;\r\n\tfontTablePart: FontTablePart;\r\n\tnumberingPart: NumberingPart;\r\n\tstylesPart: StylesPart;\r\n\tfootnotesPart: FootnotesPart;\r\n\tendnotesPart: EndnotesPart;\r\n\tthemePart: ThemePart;\r\n\tcorePropsPart: CorePropsPart;\r\n\textendedPropsPart: ExtendedPropsPart;\r\n\tsettingsPart: SettingsPart;\r\n\r\n\tstatic load(blob, parser: DocumentParser, options: any): Promise<WordDocument> {\r\n\t\tvar d = new WordDocument();\r\n\r\n\t\td._options = options;\r\n\t\td._parser = parser;\r\n\r\n\t\treturn OpenXmlPackage.load(blob, options)\r\n\t\t\t.then(pkg => {\r\n\t\t\t\td._package = pkg;\r\n\r\n\t\t\t\treturn d._package.loadRelationships();\r\n\t\t\t}).then(rels => {\r\n\t\t\t\td.rels = rels;\r\n\r\n\t\t\t\tconst tasks = topLevelRels.map(rel => {\r\n\t\t\t\t\tconst r = rels.find(x => x.type === rel.type) ?? rel; //fallback                    \r\n\t\t\t\t\treturn d.loadRelationshipPart(r.target, r.type);\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn Promise.all(tasks);\r\n\t\t\t}).then(() => d);\r\n\t}\r\n\r\n\tsave(type = \"blob\"): Promise<any> {\r\n\t\treturn this._package.save(type);\r\n\t}\r\n\r\n\tprivate loadRelationshipPart(path: string, type: string): Promise<Part> {\r\n\t\tif (this.partsMap[path])\r\n\t\t\treturn Promise.resolve(this.partsMap[path]);\r\n\r\n\t\tif (!this._package.get(path))\r\n\t\t\treturn Promise.resolve(null);\r\n\r\n\t\tlet part: Part = null;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase RelationshipTypes.OfficeDocument:\r\n\t\t\t\tthis.documentPart = part = new DocumentPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.FontTable:\r\n\t\t\t\tthis.fontTablePart = part = new FontTablePart(this._package, path);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Numbering:\r\n\t\t\t\tthis.numberingPart = part = new NumberingPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Styles:\r\n\t\t\t\tthis.stylesPart = part = new StylesPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Theme:\r\n\t\t\t\tthis.themePart = part = new ThemePart(this._package, path);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Footnotes:\r\n\t\t\t\tthis.footnotesPart = part = new FootnotesPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Endnotes:\r\n\t\t\t\tthis.endnotesPart = part = new EndnotesPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Footer:\r\n\t\t\t\tpart = new FooterPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Header:\r\n\t\t\t\tpart = new HeaderPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.CoreProperties:\r\n\t\t\t\tthis.corePropsPart = part = new CorePropsPart(this._package, path);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.ExtendedProperties:\r\n\t\t\t\tthis.extendedPropsPart = part = new ExtendedPropsPart(this._package, path);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.CustomProperties:\r\n\t\t\t\tpart = new CustomPropsPart(this._package, path);\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase RelationshipTypes.Settings:\r\n\t\t\t\tthis.settingsPart = part = new SettingsPart(this._package, path);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (part == null)\r\n\t\t\treturn Promise.resolve(null);\r\n\r\n\t\tthis.partsMap[path] = part;\r\n\t\tthis.parts.push(part);\r\n\r\n\t\treturn part.load().then(() => {\r\n\t\t\tif (part.rels == null || part.rels.length == 0)\r\n\t\t\t\treturn part;\r\n\r\n\t\t\tconst [folder] = splitPath(part.path);\r\n\t\t\tconst rels = part.rels.map(rel => {\r\n\t\t\t\treturn this.loadRelationshipPart(resolvePath(rel.target, folder), rel.type)\r\n\t\t\t});\r\n\r\n\t\t\treturn Promise.all(rels).then(() => part);\r\n\t\t});\r\n\t}\r\n\r\n\tloadDocumentImage(id: string, part?: Part): PromiseLike<string> {\r\n\t\treturn this.loadResource(part ?? this.documentPart, id, \"blob\")\r\n\t\t\t.then(x => this.blobToURL(x));\r\n\t}\r\n\r\n\tloadNumberingImage(id: string): PromiseLike<string> {\r\n\t\treturn this.loadResource(this.numberingPart, id, \"blob\")\r\n\t\t\t.then(x => this.blobToURL(x));\r\n\t}\r\n\r\n\tloadFont(id: string, key: string): PromiseLike<string> {\r\n\t\treturn this.loadResource(this.fontTablePart, id, \"uint8array\")\r\n\t\t\t.then(x => x ? this.blobToURL(new Blob([deobfuscate(x, key)])) : x);\r\n\t}\r\n\r\n\tprivate blobToURL(blob: Blob): string | PromiseLike<string> {\r\n\t\tif (!blob)\r\n\t\t\treturn null;\r\n\r\n\t\tif (this._options.useBase64URL) {\r\n\t\t\treturn blobToBase64(blob);\r\n\t\t}\r\n\r\n\t\treturn URL.createObjectURL(blob);\r\n\t}\r\n\r\n\tfindPartByRelId(id: string, basePart: Part = null) {\r\n\t\tvar rel = (basePart.rels ?? this.rels).find(r => r.id == id);\r\n\t\tconst folder = basePart ? splitPath(basePart.path)[0] : '';\r\n\t\treturn rel ? this.partsMap[resolvePath(rel.target, folder)] : null;\r\n\t}\r\n\r\n\tgetPathById(part: Part, id: string): string {\r\n\t\tconst rel = part.rels.find(x => x.id == id);\r\n\t\tconst [folder] = splitPath(part.path);\r\n\t\treturn rel ? resolvePath(rel.target, folder) : null;\r\n\t}\r\n\r\n\tprivate loadResource(part: Part, id: string, outputType: OutputType) {\r\n\t\tconst path = this.getPathById(part, id);\r\n\t\treturn path ? this._package.load(path, outputType) : Promise.resolve(null);\r\n\t}\r\n}\r\n\r\nexport function deobfuscate(data: Uint8Array, guidKey: string): Uint8Array {\r\n\tconst len = 16;\r\n\tconst trimmed = guidKey.replace(/{|}|-/g, \"\");\r\n\tconst numbers = new Array(len);\r\n\r\n\tfor (let i = 0; i < len; i++)\r\n\t\tnumbers[len - i - 1] = parseInt(trimmed.substr(i * 2, 2), 16);\r\n\r\n\tfor (let i = 0; i < 32; i++)\r\n\t\tdata[i] = data[i] ^ numbers[i % len]\r\n\r\n\treturn data;\r\n}","module.exports = __WEBPACK_EXTERNAL_MODULE__626__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(771);\n"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__626__","_zip","options","xmlParser","XmlParser","get","path","this","files","startsWith","substr","normalizePath","update","content","file","load","input","JSZip","loadAsync","then","zip","OpenXmlPackage","save","type","generateAsync","async","Promise","resolve","loadRelationships","relsPath","splitPath","f","fn","txt","parseRelationships","parseXmlDocument","firstElementChild","parseXmlString","trimXmlDeclaration","_package","all","rels","text","xmlDoc","keepOrigin","_xmlDocument","parseXml","serializeXmlString","Part","RelationshipTypes","xml","elements","map","e","id","attr","target","targetMode","autos","shd","color","borderColor","highlight","ignoreWidth","debug","parseNotes","elemName","elemClass","result","el","node","noteType","children","parseBodyElements","push","parseDocumentFile","xbody","element","background","sectPr","DomType","Document","props","parseSectionProperties","cssStyle","parseBackground","elem","xmlUtil","colorAttr","foreach","localName","parseParagraph","parseTable","parseSdt","forEach","parseStylesFile","xstyles","n","parseStyle","parseDefaultStyles","name","basedOn","styles","c","rPr","values","parseDefaultProperties","pPr","isDefault","boolAttr","linked","next","aliases","split","paragraphProps","parseParagraphProperties","runProps","parseRunProperties","parseTableStyle","s","console","warn","selector","modificator","mod","parseNumberingFile","xnums","mapping","bullets","parseAbstractNumbering","x","parseNumberingPicBullet","numId","abstractNumId","elementAttr","pict","shape","imagedata","intAttr","src","style","parseNumberingLevel","level","pStyleName","undefined","pStyle","rStyle","suff","bullet","find","levelText","format","sdtContent","Paragraph","parseRun","parseHyperlink","parseBookmarkStart","parseBookmarkEnd","paragraph","parseParagraphProperty","styleName","className","classNameOfCnfStyle","parseFrame","parent","Hyperlink","anchor","href","Run","Text","textContent","SimpleField","instruction","lock","dirty","fieldRun","Instruction","ComplexField","charType","NoBreakHyphen","Break","break","Symbol","font","char","Tab","FootnoteReference","EndnoteReference","d","parseDrawing","run","verticalAlign","valueOfVertAlign","parseDrawingWrapper","Drawing","isAnchor","wrapType","simplePos","posX","relative","align","offset","posY","lengthAttr","LengthUsage","Emu","pos","alignNode","offsetNode","sizeValue","g","parseGraphic","graphicData","parsePicture","Image","blipFill","blip","spPr","xfrm","Table","parseTableRow","columns","parseTableColumns","parseTableProperties","width","table","cellStyle","classNameOftblLook","parseTablePosition","colBandSize","rowBandSize","topFromText","bottomFromText","rightFromText","leftFromText","addSize","Row","parseTableCell","parseTableRowProperties","row","Cell","parseTableCellProperties","cell","span","verticalMerge","childStyle","handler","valueOfJc","valueOfTextAlignment","FontSize","valueOfSize","parseTrHeight","parseUnderline","parseIndentation","parseFont","parseBorderProperties","valueOfMargin","valueOfBorder","parseMarginProperties","valueOfTblLayout","parseSpacing","val","col","fonts","themeValue","filter","join","length","firstLine","hanging","left","start","right","end","before","after","line","lineRule","toFixed","output","DocumentParser","knownColors","cb","i","childNodes","nodeType","Node","ELEMENT_NODE","attrName","defValue","autoColor","v","includes","themeColor","Dxa","convertLength","Percent","size","Border","_","asTagName","a","b","hexAttr","trim","parseCoreProps","CorePropsPart","title","description","subject","creator","keywords","language","lastModifiedBy","revision","parseInt","parseCustomProps","CustomPropsPart","firstChild","formatId","nodeName","value","parseExtendedProps","ExtendedPropsPart","safeParseToInt","template","pages","words","characters","application","lines","paragraphs","company","appVersion","BookmarkStart","colFirst","colLast","BookmarkEnd","parseBorder","Point","frame","shadow","top","bottom","ns","wordml","drawingml","picture","compatibility","mul","unit","LineHeight","usage","test","defaultValue","namespaceURI","fontSize","pkg","parser","_documentParser","body","DocumentPart","parseCommonProperty","tabs","parseTabs","sectionProps","numbering","parseNumbering","lineSpacing","parseLineSpacing","textAlignment","keepLines","keepNext","pageBreakBefore","outlineLevel","position","leader","parseRunProperty","SectionType","parseColumns","numberOfColumns","space","separator","equalWidth","parsePageNumber","chapSep","chapStyle","parseFooterHeaderReference","section","pageSize","height","orientation","pageMargins","header","footer","gutter","headerRefs","footerRefs","titlePage","pageBorders","parseBorders","pageNumber","defaultOptions","ignoreHeight","ignoreFonts","breakPages","experimental","inWrapper","ignoreLastRenderedPageBreak","renderHeaders","renderFooters","renderFootnotes","renderEndnotes","useBase64URL","data","userOptions","ops","WordDocument","bodyContainer","styleContainer","renderer","HtmlRenderer","window","document","doc","render","parseFonts","FontTablePart","embedFontTypeMap","embedRegular","embedBold","embedItalic","embedBoldItalic","embedFontRefs","family","altName","parseEmbedFontRef","key","WmlHeader","Header","WmlFooter","Footer","rootElement","createRootElement","BaseHeaderFooterPart","HeaderPart","FooterPart","htmlDocument","styleMap","currentPart","tableVerticalMerges","currentVerticalMerge","tableCellPositions","currentCellPosition","footnoteMap","endnoteMap","currentEndnoteIds","usedHederFooterParts","currentTabs","tabsTimeout","createElement","removeAllElements","appendComment","appendChild","renderDefaultStyle","themePart","renderTheme","stylesPart","processStyles","renderStyles","numberingPart","prodessNumberings","domNumberings","renderNumbering","footnotesPart","keyBy","notes","endnotesPart","settingsPart","defaultTabSize","settings","defaultTabStop","fontTablePart","renderFontTable","sectionElements","renderSections","documentPart","renderWrapper","appendChildren","refreshTabStops","variables","fontScheme","theme","majorFont","latinTypeface","minorFont","colorScheme","Object","entries","colors","k","cssText","styleToString","createStyleElement","fontsPart","ref","loadFont","fontData","cssValues","processStyleName","escapeClassName","stylesMap","baseStyle","mergeDeep","baseValues","styleValues","copyStyleProperties","cssName","numberings","num","findStyle","processElement","processTable","attrs","getOwnPropertyNames","hasOwnProperty","createSection","paddingLeft","paddingRight","paddingTop","paddingBottom","minHeight","columnCount","columnGap","columnRule","sections","splitBySection","prevProps","l","currentFootnoteIds","sectProps","sectionElement","renderStyleValues","renderHeaderFooter","contentElement","renderElements","renderNotes","refs","page","firstOfSection","into","part","findPartByRelId","isPageBreakElement","current","p","pBreakIndex","rBreakIndex","findIndex","r","bind","breakRun","splitRun","newParagraph","slice","runChildren","newRun","currentSectProps","listStyleType","styleText","rootCounters","numberingClass","toLowerCase","loadNumberingImage","counter","numberingCounter","levelTextToContent","numFormatToCssValue","defautStyles","subStyles","linkedStyle","concat","subStyle","noteIds","notesMap","renderElement","renderParagraph","renderBookmarkStart","renderRun","renderTable","renderTableRow","renderTableCell","renderHyperlink","renderDrawing","renderImage","renderText","renderTab","renderSymbol","renderBreak","renderContainer","Footnote","Endnote","renderFootnoteReference","renderEndnoteReference","renderChildren","elems","tagName","renderClass","renderCommonProperties","classList","add","renderRunProperties","display","textIndent","loadDocumentImage","createTextNode","fontFamily","innerHTML","tabSpan","tabStopClass","stops","findParent","wrapper","renderTableColumns","pop","colElem","rowSpan","colSpan","ouput","assign","lvl","selectors","numformat","replace","substring","clearTimeout","setTimeout","pixelToPoint","computePixelToPoint","tab","updateTabStop","comment","createComment","defaultTab","lengthToPoint","parseFloat","container","temp","offsetWidth","removeChild","closest","ebb","getBoundingClientRect","pbb","pcs","getComputedStyle","tabStops","t","sort","lastTab","pWidthPt","marginLeft","pOffset","Array","from","querySelectorAll","nextIdx","indexOf","range","createRange","setStart","setEndBefore","setEndAfter","nextBB","textDecoration","wordSpacing","textDecorationStyle","WmlBaseNote","WmlFootnote","WmlEndnote","BaseNotePart","FootnotesPart","EndnotesPart","parseNumberingPart","NumberingPart","overrides","abstractId","parseNumberingLevelOverrride","levels","multiLevelType","numberingStyleLink","styleLink","restart","justification","bulletPictureId","paragraphStyle","numberingLevel","parseNumberingBulletPicture","referenceId","abstractNumberings","bulletPictures","xmlString","DOMParser","parseFromString","errorText","getElementsByTagName","Error","XMLSerializer","serializeToString","item","attrLocalName","attributes","floatAttr","convertBoolean","globalXmlParser","parseSettings","SettingsPart","parseNoteProperties","defaultNoteIds","nummeringFormat","footnoteProps","endnoteProps","autoHyphenation","StylesPart","parseTheme","ThemePart","parseColorScheme","srgbClr","sysClr","parseFontScheme","parseFontInfo","eaTypeface","csTypeface","DmlTheme","themeElements","isObject","isArray","si","lastIndexOf","base","prefix","URL","toString","array","by","reduce","blob","reader","FileReader","onloadend","readAsDataURL","sources","source","shift","topLevelRels","OfficeDocument","ExtendedProperties","CoreProperties","CustomProperties","parts","partsMap","_options","_parser","tasks","rel","loadRelationshipPart","FontTable","Numbering","Styles","Theme","Footnotes","Endnotes","corePropsPart","extendedPropsPart","Settings","folder","resolvePath","loadResource","blobToURL","Blob","deobfuscate","blobToBase64","createObjectURL","basePart","getPathById","outputType","guidKey","trimmed","numbers","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call"],"sourceRoot":""}